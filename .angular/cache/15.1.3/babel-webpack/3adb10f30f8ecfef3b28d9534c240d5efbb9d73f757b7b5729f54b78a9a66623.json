{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContractEvents = exports.getContractAddress = exports.getCodeId = void 0;\nvar TxAPI_1 = require(\"../client/lcd/api/TxAPI\");\nfunction getCodeId(txResult, msgIndex) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse code id -- tx logs are empty.');\n  }\n  var codeId = txResult.logs[msgIndex].eventsByType['store_code']['code_id'][0];\n  return codeId;\n}\nexports.getCodeId = getCodeId;\nfunction getContractAddress(txResult, msgIndex, isClassic) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n  if (isClassic === void 0) {\n    isClassic = false;\n  }\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse contract address -- tx logs are empty.');\n  }\n  var eventName;\n  var attributeKey;\n  if (isClassic) {\n    eventName = 'instantiate_contract';\n    attributeKey = 'contract_address';\n  } else {\n    eventName = 'wasm';\n    attributeKey = '_contract_address';\n  }\n  var contractAddress = txResult.logs[msgIndex].eventsByType[eventName][attributeKey][0];\n  return contractAddress;\n}\nexports.getContractAddress = getContractAddress;\nfunction getContractEvents(txResult, msgIndex, isClassic) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n  if (isClassic === void 0) {\n    isClassic = false;\n  }\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse contract events -- tx logs are empty.');\n  }\n  var eventName;\n  var attributeKey;\n  if (isClassic) {\n    eventName = 'from_contract';\n    attributeKey = 'contract_address';\n  } else {\n    eventName = 'instantiate';\n    attributeKey = '_contract_address';\n  }\n  var contractEvents = [];\n  for (var _i = 0, _a = txResult.logs[msgIndex].events; _i < _a.length; _i++) {\n    var event_1 = _a[_i];\n    if (event_1.type === eventName) {\n      var eventData = {\n        contract_address: ''\n      }; // will be overwritten\n      var currentContractAddress = event_1.attributes[0].value;\n      for (var _b = 0, _c = event_1.attributes; _b < _c.length; _b++) {\n        var att = _c[_b];\n        if (att.key == attributeKey && currentContractAddress !== att.value) {\n          contractEvents.push(eventData);\n          eventData = {\n            contract_address: ''\n          };\n          currentContractAddress = att.value;\n        }\n        eventData[att.key] = att.value;\n      }\n      contractEvents.push(eventData);\n      return contractEvents;\n    }\n  }\n  throw new Error(\"could not find event type \".concat(eventName, \" in logs\"));\n}\nexports.getContractEvents = getContractEvents;\n//# sourceMappingURL=contract.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}