{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport function refreshable(config) {\n  return function (target, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let data;\n      const intervalHandler = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n        data = yield config.dataProvider.apply(this);\n      }), config.intervalMs);\n      if (typeof intervalHandler.unref === 'function') {\n        intervalHandler.unref();\n      }\n      setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n        data = yield config.dataProvider.apply(this);\n      }), 0);\n      Object.defineProperty(target, key, {\n        get: () => data,\n        set(x) {\n          if (x === null) {\n            clearInterval(intervalHandler);\n          }\n        }\n      });\n    });\n  };\n}\n//# sourceMappingURL=refreshable.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}