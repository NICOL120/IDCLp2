{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Fee } from '@terra-money/terra.js';\nimport { CONFIG } from '../../consts/config';\nimport BigNumber from 'bignumber.js';\nimport { Denom } from '../../consts/denom';\nimport { times } from \"../../libs/math\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"mdb-angular-ui-kit/modal\";\nimport * as i3 from \"../terrajs.service\";\nimport * as i4 from \"ngx-google-analytics\";\nimport * as i5 from \"../info.service\";\nimport * as i6 from \"../../pipes/balance.pipe\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular-slider/ngx-slider\";\nimport * as i10 from \"mdb-angular-ui-kit/tooltip\";\nimport * as i11 from \"mdb-angular-ui-kit/checkbox\";\nimport * as i12 from \"../../pipes/truncate.pipe\";\nimport * as i13 from \"../../pipes/unit.pipe\";\nimport * as i14 from \"../../pipes/currency.pipe\";\nfunction TxPostComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"h4\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.loadingMsg);\n  }\n}\nfunction TxPostComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 11);\n    i0.ɵɵelementStart(2, \"h4\", 10);\n    i0.ɵɵtext(3, \"Failed\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TxPostComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 12);\n    i0.ɵɵelementStart(2, \"h4\", 10);\n    i0.ɵɵtext(3, \"Please confirm your transaction\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TxPostComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 13);\n    i0.ɵɵelementStart(2, \"h4\", 10);\n    i0.ɵɵtext(3, \"Success\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TxPostComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TxPostComponent_div_3_div_1_Template, 4, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, TxPostComponent_div_3_div_2_Template, 4, 0, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.executed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.executed);\n  }\n}\nfunction TxPostComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.failMsg, \" \");\n  }\n}\nfunction TxPostComponent_div_6_ngx_slider_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-slider\", 25);\n    i0.ɵɵlistener(\"userChange\", function TxPostComponent_div_6_ngx_slider_22_Template_ngx_slider_userChange_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.calculateFee());\n    })(\"valueChange\", function TxPostComponent_div_6_ngx_slider_22_Template_ngx_slider_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.gasBuffer = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r13.gasBuffer)(\"options\", ctx_r13.ngx_slider_option);\n  }\n}\nfunction TxPostComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14)(2, \"div\", 15);\n    i0.ɵɵtext(3, \"Fee \");\n    i0.ɵɵelement(4, \"i\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 17)(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"unit\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 18)(17, \"div\", 19);\n    i0.ɵɵtext(18, \"Gas Buffer \");\n    i0.ɵɵelement(19, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 21)(21, \"div\", 22);\n    i0.ɵɵtemplate(22, TxPostComponent_div_6_ngx_slider_22_Template, 1, 2, \"ngx-slider\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 24);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(8, 5, ctx_r4.fee), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 7, ctx_r4.selectedCoin));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"(\", i0.ɵɵpipeBind1(15, 9, ctx_r4.feeUSD), \" USD)\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.gasBuffer, \"%\");\n  }\n}\nfunction TxPostComponent_div_7_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" Transaction could fail on low buffer \");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TxPostComponent_div_7_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" You do not have enough coin \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TxPostComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"div\", 26);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵtemplate(3, TxPostComponent_div_7_span_3_Template, 4, 0, \"span\", 27);\n    i0.ɵɵtemplate(4, TxPostComponent_div_7_span_4_Template, 3, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.gasBuffer < 20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isEnoughFee);\n  }\n}\nfunction TxPostComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14)(2, \"div\", 15);\n    i0.ɵɵtext(3, \"Transaction Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"a\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"truncate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"href\", ctx_r6.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 2, ctx_r6.txhash));\n  }\n}\nfunction TxPostComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35)(2, \"input\", 36);\n    i0.ɵɵlistener(\"ngModelChange\", function TxPostComponent_div_9_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.confirmCheck = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 37);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.confirmCheck);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r7.confirmMsg, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TxPostComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function TxPostComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.cancel());\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r8.loading);\n  }\n}\nfunction TxPostComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function TxPostComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.execute());\n    });\n    i0.ɵɵtext(1, \"Confirm\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r9.loading || ctx_r9.confirmMsg && !ctx_r9.confirmCheck || !ctx_r9.isEnoughFee);\n  }\n}\nfunction TxPostComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function TxPostComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.done());\n    });\n    i0.ɵɵtext(1, \"Done\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let TxPostComponent = /*#__PURE__*/(() => {\n  class TxPostComponent {\n    constructor(httpClient, modalRef, terrajs, $gaService, info, balancePipe) {\n      this.httpClient = httpClient;\n      this.modalRef = modalRef;\n      this.terrajs = terrajs;\n      this.$gaService = $gaService;\n      this.info = info;\n      this.balancePipe = balancePipe;\n      this.executed = false;\n      this.loading = true;\n      this.failed = false;\n      this.UNIT = CONFIG.UNIT;\n      this.confirmCheck = false;\n      this.isEnoughFee = true;\n      this.selectedCoin = Denom.LUNA;\n      this.gasBuffer = 70;\n      this.ngx_slider_option = {\n        animate: false,\n        step: 10,\n        tickStep: 10,\n        floor: 10,\n        ceil: 70,\n        showTicksValues: false,\n        hideLimitLabels: true\n      };\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d;\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          if (!this.terrajs.isConnected) {\n            throw new Error('please connect your wallet');\n          }\n          if (this.terrajs.extensionCurrentNetworkName !== this.terrajs.networkName) {\n            throw new Error('Please switch to mainnet network, not classic in Terra Station and reconnect wallet again.');\n          }\n          // ensure native token balances\n          if (Object.keys(this.info.tokenBalances).length === 0) {\n            yield this.info.refreshNativeTokens();\n          }\n          // load old values\n          try {\n            const gasSettingStr = localStorage.getItem('gasSetting');\n            if (gasSettingStr) {\n              const gasSetting = JSON.parse(gasSettingStr);\n              if (gasSetting.selectedCoin) {\n                this.selectedCoin = gasSetting.selectedCoin;\n              }\n              if (+gasSetting.gasBuffer) {\n                this.gasBuffer = +gasSetting.gasBuffer;\n              }\n            }\n          } catch (e) {}\n          this.coins = Object.keys(this.info.tokenBalances).filter(it => this.terrajs.lcdClient.config.gasPrices[it]);\n          if (!this.coins.length) {\n            this.coins.push(Denom.LUNA);\n          }\n          if (!this.coins.includes(this.selectedCoin)) {\n            this.selectedCoin = this.coins[0];\n          }\n          // simulate\n          this.loadingMsg = 'Simulating...';\n          const singerOptions = [{\n            address: this.terrajs.address\n          }];\n          this.signMsg = yield this.terrajs.lcdClient.tx.create(singerOptions, {\n            msgs: this.msgs,\n            feeDenoms: [Denom.LUNA]\n          });\n          this.gasLimit = this.signMsg.auth_info.fee.gas_limit;\n          this.calculateFee();\n        } catch (e) {\n          console.error(e);\n          this.failed = true;\n          this.failMsg = ((_b = (_a = e.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || e.message || 'Error occurred';\n          this.$gaService.exception('Simulating:' + (((_d = (_c = e.response) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.error) || e.message), false);\n        } finally {\n          this.loading = false;\n        }\n      });\n    }\n    calculateFee() {\n      this.userGasLimit = new BigNumber(this.gasLimit).times(100 + this.gasBuffer).div(170).integerValue(BigNumber.ROUND_UP).toString();\n      this.fee = new BigNumber(this.userGasLimit).times(this.terrajs.lcdClient.config.gasPrices[this.selectedCoin]).integerValue(BigNumber.ROUND_UP).toString();\n      this.feeUSD = times(this.fee, this.info.ulunaUSDPrice);\n      this.isEnoughFee = +this.info.tokenBalances[this.selectedCoin] >= +this.fee;\n    }\n    execute() {\n      var _a, _b;\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          try {\n            localStorage.setItem('gasSetting', JSON.stringify({\n              gasBuffer: this.gasBuffer,\n              selectedCoin: this.selectedCoin\n            }));\n          } catch (e) {}\n          if (this.terrajs.isReadOnly) {\n            throw {\n              message: 'Wallet connected in read only mode.',\n              data: null\n            };\n          }\n          this.loading = true;\n          this.loadingMsg = 'Broadcasting...';\n          const postMsg = {\n            msgs: this.msgs,\n            fee: Fee.fromData({\n              gas_limit: this.userGasLimit,\n              amount: [{\n                denom: this.selectedCoin,\n                amount: this.fee\n              }],\n              payer: undefined,\n              granter: undefined\n            }),\n            gasPrices: `${this.terrajs.lcdClient.config.gasPrices[this.selectedCoin]}${this.selectedCoin}`\n          };\n          const res = yield this.terrajs.walletController.post(postMsg);\n          this.txhash = res.result.txhash;\n          this.link = this.txhash && `${this.terrajs.settings.finder}/${this.terrajs.networkName}/tx/${this.txhash}`;\n          if (!res.success) {\n            throw res;\n          }\n          this.executed = true;\n          this.loadingMsg = 'Waiting for result...';\n          do {\n            const res2 = yield this.httpClient.get(`${this.terrajs.settings.lcd}/cosmos/tx/v1beta1/txs/${this.txhash}`, {\n              observe: 'response'\n            }).toPromise().catch(e => e);\n            if (res2.ok) {\n              if (((_a = res2.body) === null || _a === void 0 ? void 0 : _a.code) || ((_b = res2.body) === null || _b === void 0 ? void 0 : _b.error)) {\n                throw {\n                  message: 'Transaction failed',\n                  data: res2.body.code || res2.body.error\n                };\n              }\n              break;\n            } else {\n              yield new Promise(ok => setTimeout(() => ok(null), 1000));\n            }\n          } while (true);\n        } catch (e) {\n          console.error(e);\n          this.$gaService.exception('Post:' + (e.data || e.message), false);\n          this.failed = true;\n          this.failMsg = e.message || 'Error occurred';\n        } finally {\n          this.loading = false;\n        }\n      });\n    }\n    done() {\n      this.modalRef.close(true);\n    }\n    cancel() {\n      this.modalRef.close(false);\n    }\n  }\n  TxPostComponent.ɵfac = function TxPostComponent_Factory(t) {\n    return new (t || TxPostComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MdbModalRef), i0.ɵɵdirectiveInject(i3.TerrajsService), i0.ɵɵdirectiveInject(i4.GoogleAnalyticsService), i0.ɵɵdirectiveInject(i5.InfoService), i0.ɵɵdirectiveInject(i6.BalancePipe));\n  };\n  TxPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TxPostComponent,\n    selectors: [[\"app-tx-post\"]],\n    decls: 14,\n    vars: 11,\n    consts: [[1, \"modal-header\"], [4, \"ngIf\"], [1, \"modal-body\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"row mt-3\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"class\", \"relative waves-light btn btn-secondary\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"relative waves-light btn btn-primary\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"relative waves-light btn btn-primary\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", \"role\", \"status\", 1, \"spinner-border\"], [1, \"modal-title\"], [1, \"fas\", \"fa-5x\", \"fa-times-circle\", \"text-danger\"], [1, \"fas\", \"fa-5x\", \"fa-info-circle\", \"text-info\"], [1, \"fas\", \"fa-5x\", \"fa-check\", \"text-success\"], [1, \"row\"], [1, \"col-6\", \"small\"], [\"mdbTooltip\", \"Fee paid to terra chain to execute this transaction\", 1, \"fas\", \"fa-info-circle\", \"info-icon\"], [1, \"col-6\", \"text-end\", \"small\"], [1, \"row\", \"mt-2\", \"mb-1\"], [1, \"col-3\", \"small\", \"gas\"], [\"mdbTooltip\", \"Gas buffer prevents failed transaction as the actual gas usage might be slightly higher than the estimated gas fee\", 1, \"fas\", \"fa-info-circle\", \"info-icon\"], [1, \"col-7\"], [1, \"gas-slider-adjustment\"], [3, \"value\", \"options\", \"userChange\", \"valueChange\", 4, \"ngIf\"], [1, \"col-2\", \"small\", \"gas\"], [3, \"value\", \"options\", \"userChange\", \"valueChange\"], [1, \"col-3\"], [\"class\", \"small text-warning\", 4, \"ngIf\"], [\"class\", \"small text-danger\", 4, \"ngIf\"], [1, \"col-2\"], [1, \"small\", \"text-warning\"], [1, \"fas\", \"fa-exclamation-triangle\"], [1, \"small\", \"text-danger\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"row\", \"mt-3\"], [1, \"col-12\"], [\"mdbCheckbox\", \"\", \"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [3, \"innerHTML\"], [\"type\", \"button\", 1, \"relative\", \"waves-light\", \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"relative\", \"waves-light\", \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"relative\", \"waves-light\", \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function TxPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TxPostComponent_div_1_Template, 4, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, TxPostComponent_div_2_Template, 4, 0, \"div\", 1);\n        i0.ɵɵtemplate(3, TxPostComponent_div_3_Template, 3, 2, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, TxPostComponent_div_5_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(6, TxPostComponent_div_6_Template, 25, 11, \"div\", 1);\n        i0.ɵɵtemplate(7, TxPostComponent_div_7_Template, 6, 2, \"div\", 3);\n        i0.ɵɵtemplate(8, TxPostComponent_div_8_Template, 8, 4, \"div\", 1);\n        i0.ɵɵtemplate(9, TxPostComponent_div_9_Template, 4, 2, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtemplate(11, TxPostComponent_button_11_Template, 2, 1, \"button\", 6);\n        i0.ɵɵtemplate(12, TxPostComponent_button_12_Template, 2, 1, \"button\", 7);\n        i0.ɵɵtemplate(13, TxPostComponent_button_13_Template, 2, 0, \"button\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.failed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.failed && !ctx.executed && ctx.signMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.failed && !ctx.executed && !ctx.loading && ctx.signMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.txhash);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmMsg && !ctx.failed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.executed || ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.executed && !ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.executed && !ctx.failed);\n      }\n    },\n    dependencies: [i7.NgIf, i8.CheckboxControlValueAccessor, i8.NgControlStatus, i8.NgModel, i9.ɵa, i10.MdbTooltipDirective, i11.MdbCheckboxDirective, i12.TruncatePipe, i13.UnitPipe, i14.CurrencyPipe],\n    styles: [\".modal-header[_ngcontent-%COMP%]{display:block;text-align:center}.modal-footer[_ngcontent-%COMP%]{justify-content:center}.spinner-border[_ngcontent-%COMP%]{width:4em;height:4em;border-width:.5em}.gas[_ngcontent-%COMP%]{align-self:center}  .gas-slider-adjustment .ngx-slider{margin-top:.7em}  .gas-slider-adjustment .ngx-slider .ngx-slider-bar{background:#fff;height:5px}  .gas-slider-adjustment .ngx-slider .ngx-slider-pointer{width:16px;height:16px;top:auto;bottom:-8px;background-color:#fc5185}  .gas-slider-adjustment .ngx-slider .ngx-slider-pointer:focus{outline-style:none!important;outline-width:0!important}  .gas-slider-adjustment .ngx-slider .ngx-slider-pointer:after{display:none}  .gas-slider-adjustment .ngx-slider .ngx-slider-bubble{display:none}.coins-fee-select[_ngcontent-%COMP%]{background-color:#222830;color:#fff;border:1px solid white;margin-left:.5em}\"]\n  });\n  return TxPostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}