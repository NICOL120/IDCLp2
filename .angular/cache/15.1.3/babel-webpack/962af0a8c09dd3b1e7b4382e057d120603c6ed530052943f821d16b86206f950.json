{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plan = void 0;\nvar json_1 = require(\"../../util/json\");\nvar upgrade_1 = require(\"@terra-money/terra.proto/cosmos/upgrade/v1beta1/upgrade\");\nvar long_1 = __importDefault(require(\"long\"));\n/*\n * Plan specifies information about a planned upgrade and when it should occur.\n */\nvar Plan = /** @class */function (_super) {\n  __extends(Plan, _super);\n  /**\n   * @param name This name will be used by the upgraded  version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied.\n   * @param time Deprecated\n   * @param height  The height at which the upgrade must be performed. Only used if Time is not set.\n   * @param info Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to\n   * @param upgraded_client_state Deprecated\n   */\n  function Plan(name, time, height, info, upgraded_client_state) {\n    var _this = _super.call(this) || this;\n    _this.name = name;\n    _this.time = time;\n    _this.height = height;\n    _this.info = info;\n    _this.upgraded_client_state = upgraded_client_state;\n    return _this;\n  }\n  Plan.fromAmino = function (data) {\n    var name = data.name,\n      time = data.time,\n      height = data.height,\n      info = data.info,\n      upgraded_client_state = data.upgraded_client_state;\n    return new Plan(name, time ? new Date(time) : undefined, height, info, upgraded_client_state);\n  };\n  Plan.prototype.toAmino = function () {\n    var _a = this,\n      name = _a.name,\n      time = _a.time,\n      height = _a.height,\n      info = _a.info,\n      upgraded_client_state = _a.upgraded_client_state;\n    var res = {\n      name: name,\n      time: time ? time.toISOString().replace(/\\.000Z$/, 'Z') : undefined,\n      height: height,\n      info: info,\n      upgraded_client_state: upgraded_client_state\n    };\n    return res;\n  };\n  Plan.fromData = function (data) {\n    var name = data.name,\n      time = data.time,\n      height = data.height,\n      info = data.info,\n      upgraded_client_state = data.upgraded_client_state;\n    return new Plan(name, time ? new Date(time) : undefined, height, info, upgraded_client_state);\n  };\n  Plan.prototype.toData = function () {\n    var _a = this,\n      name = _a.name,\n      time = _a.time,\n      height = _a.height,\n      info = _a.info,\n      upgraded_client_state = _a.upgraded_client_state;\n    var res = {\n      name: name,\n      time: time ? time.toISOString().replace(/\\.000Z$/, 'Z') : undefined,\n      height: height,\n      info: info,\n      upgraded_client_state: upgraded_client_state\n    };\n    return res;\n  };\n  Plan.fromProto = function (proto) {\n    return new Plan(proto.name, proto.time, proto.height.toString(), proto.info, proto.upgradedClientState);\n  };\n  Plan.prototype.toProto = function () {\n    var _a = this,\n      name = _a.name,\n      time = _a.time,\n      height = _a.height,\n      info = _a.info,\n      upgraded_client_state = _a.upgraded_client_state;\n    return upgrade_1.Plan.fromPartial({\n      name: name,\n      time: time,\n      height: long_1.default.fromString(height),\n      info: info,\n      upgradedClientState: upgraded_client_state\n    });\n  };\n  return Plan;\n}(json_1.JSONSerializable);\nexports.Plan = Plan;\n//# sourceMappingURL=Plan.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}