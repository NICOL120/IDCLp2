{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DelayedVestingAccount = void 0;\nvar json_1 = require(\"../../util/json\");\nvar BaseVestingAccount_1 = require(\"./BaseVestingAccount\");\nvar vesting_1 = require(\"@terra-money/terra.proto/cosmos/vesting/v1beta1/vesting\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n/**\n * DelayedVestingAccount implements the VestingAccount interface. It vests all\n * coins after a specific time, but non prior. In other words, it keeps them\n * locked until a specified time.\n */\nvar DelayedVestingAccount = /** @class */function (_super) {\n  __extends(DelayedVestingAccount, _super);\n  /**\n   *\n   * @param base_vesting_account account information\n   */\n  function DelayedVestingAccount(base_vesting_account) {\n    var _this = _super.call(this) || this;\n    _this.base_vesting_account = base_vesting_account;\n    return _this;\n  }\n  DelayedVestingAccount.prototype.getAccountNumber = function () {\n    return this.base_vesting_account.getAccountNumber();\n  };\n  DelayedVestingAccount.prototype.getSequenceNumber = function () {\n    return this.base_vesting_account.getSequenceNumber();\n  };\n  DelayedVestingAccount.prototype.getPublicKey = function () {\n    return this.base_vesting_account.base_account.public_key;\n  };\n  DelayedVestingAccount.prototype.toAmino = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var base_vesting_account = this.base_vesting_account;\n    return {\n      type: 'cosmos-sdk/DelayedVestingAccount',\n      value: {\n        base_vesting_account: base_vesting_account.toAmino().value\n      }\n    };\n  };\n  DelayedVestingAccount.fromAmino = function (data, isClassic) {\n    var base_vesting_account = BaseVestingAccount_1.BaseVestingAccount.fromAmino({\n      type: 'cosmos-sdk/BaseVestingAccount',\n      value: data.value.base_vesting_account\n    });\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new DelayedVestingAccount(base_vesting_account);\n  };\n  DelayedVestingAccount.prototype.toData = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var base_vesting_account = this.base_vesting_account;\n    return {\n      '@type': '/cosmos.vesting.v1beta1.DelayedVestingAccount',\n      base_vesting_account: base_vesting_account.toData()\n    };\n  };\n  DelayedVestingAccount.fromData = function (data, isClassic) {\n    var base_vesting_account = BaseVestingAccount_1.BaseVestingAccount.fromData(__assign({\n      '@type': '/cosmos.vesting.v1beta1.BaseVestingAccount'\n    }, data.base_vesting_account));\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new DelayedVestingAccount(base_vesting_account);\n  };\n  DelayedVestingAccount.prototype.toProto = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var base_vesting_account = this.base_vesting_account;\n    return vesting_1.DelayedVestingAccount.fromPartial({\n      baseVestingAccount: base_vesting_account.toProto()\n    });\n  };\n  DelayedVestingAccount.fromProto = function (DelayedVestingAccountProto, isClassic) {\n    var baseVestingAccount = BaseVestingAccount_1.BaseVestingAccount.fromProto(DelayedVestingAccountProto.baseVestingAccount);\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new DelayedVestingAccount(baseVestingAccount);\n  };\n  DelayedVestingAccount.prototype.packAny = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.vesting.v1beta1.DelayedVestingAccount',\n      value: vesting_1.DelayedVestingAccount.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  DelayedVestingAccount.unpackAny = function (pubkeyAny, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return DelayedVestingAccount.fromProto(vesting_1.DelayedVestingAccount.decode(pubkeyAny.value), isClassic);\n  };\n  return DelayedVestingAccount;\n}(json_1.JSONSerializable);\nexports.DelayedVestingAccount = DelayedVestingAccount;\n//# sourceMappingURL=DelayedVestingAccount.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}