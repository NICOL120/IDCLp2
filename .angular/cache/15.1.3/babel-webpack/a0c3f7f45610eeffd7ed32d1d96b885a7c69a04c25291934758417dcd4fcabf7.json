{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GrpcWebImpl = exports.MsgRevokeAllowanceDesc = exports.MsgGrantAllowanceDesc = exports.MsgDesc = exports.MsgClientImpl = exports.MsgRevokeAllowanceResponse = exports.MsgRevokeAllowance = exports.MsgGrantAllowanceResponse = exports.MsgGrantAllowance = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst grpc_web_1 = require(\"@improbable-eng/grpc-web\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst browser_headers_1 = require(\"browser-headers\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nconst baseMsgGrantAllowance = {\n  granter: \"\",\n  grantee: \"\"\n};\nexports.MsgGrantAllowance = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n    if (message.allowance !== undefined) {\n      any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgGrantAllowance);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n        case 2:\n          message.grantee = reader.string();\n          break;\n        case 3:\n          message.allowance = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgGrantAllowance);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromJSON(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    message.allowance !== undefined && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgGrantAllowance);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromPartial(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    return message;\n  }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexports.MsgGrantAllowanceResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgGrantAllowanceResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgGrantAllowanceResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgGrantAllowanceResponse);\n    return message;\n  }\n};\nconst baseMsgRevokeAllowance = {\n  granter: \"\",\n  grantee: \"\"\n};\nexports.MsgRevokeAllowance = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRevokeAllowance);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n        case 2:\n          message.grantee = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgRevokeAllowance);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgRevokeAllowance);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexports.MsgRevokeAllowanceResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRevokeAllowanceResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgRevokeAllowanceResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgRevokeAllowanceResponse);\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.GrantAllowance = this.GrantAllowance.bind(this);\n    this.RevokeAllowance = this.RevokeAllowance.bind(this);\n  }\n  GrantAllowance(request, metadata) {\n    return this.rpc.unary(exports.MsgGrantAllowanceDesc, exports.MsgGrantAllowance.fromPartial(request), metadata);\n  }\n  RevokeAllowance(request, metadata) {\n    return this.rpc.unary(exports.MsgRevokeAllowanceDesc, exports.MsgRevokeAllowance.fromPartial(request), metadata);\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nexports.MsgDesc = {\n  serviceName: \"cosmos.feegrant.v1beta1.Msg\"\n};\nexports.MsgGrantAllowanceDesc = {\n  methodName: \"GrantAllowance\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgGrantAllowance.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgGrantAllowanceResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgRevokeAllowanceDesc = {\n  methodName: \"RevokeAllowance\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgRevokeAllowance.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgRevokeAllowanceResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nclass GrpcWebImpl {\n  constructor(host, options) {\n    this.host = host;\n    this.options = options;\n  }\n  unary(methodDesc, _request, metadata) {\n    var _a;\n    const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n    const maybeCombinedMetadata = metadata && this.options.metadata ? new browser_headers_1.BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap)) : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc_web_1.grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc_web_1.grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage);\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        }\n      });\n    });\n  }\n}\nexports.GrpcWebImpl = GrpcWebImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\n//# sourceMappingURL=tx.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}