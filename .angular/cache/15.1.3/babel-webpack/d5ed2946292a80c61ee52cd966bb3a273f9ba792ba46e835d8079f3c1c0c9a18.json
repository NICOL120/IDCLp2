{"ast":null,"code":"\"use strict\";\n\n// Adapted from https://github.com/terra-money/terra-js/blob/master/src/utils/keyUtils.ts\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MnemonicKey = exports.LUNA_COIN_TYPE = void 0;\nvar bip32 = __importStar(require(\"bip32\"));\nvar bip39 = __importStar(require(\"bip39\"));\nvar RawKey_1 = require(\"./RawKey\");\nexports.LUNA_COIN_TYPE = 330;\nvar DEFAULT_OPTIONS = {\n  account: 0,\n  index: 0,\n  coinType: exports.LUNA_COIN_TYPE\n};\n/**\n * Implements a BIP39 mnemonic wallet with standard key derivation from a word list. Note\n * that this implementation exposes the private key in memory, so it is not advised to use\n * for applications requiring high security.\n */\nvar MnemonicKey = /** @class */function (_super) {\n  __extends(MnemonicKey, _super);\n  /**\n   * Creates a new signing key from a mnemonic phrase. If no mnemonic is provided, one\n   * will be automatically generated.\n   *\n   * ### Providing a mnemonic\n   *\n   * ```ts\n   * import { MnemonicKey } from 'terra.js';\n   *\n   * const mk = new MnemonicKey({ mnemonic: '...' });\n   * console.log(mk.accAddress);\n   * ```\n   *\n   * ### Generating a random mnemonic\n   *\n   * ```ts\n   * const mk2 = new MnemonicKey();\n   * console.log(mk2.mnemonic);\n   * ```\n   *\n   * @param options\n   */\n  function MnemonicKey(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = this;\n    var _a = __assign(__assign({}, DEFAULT_OPTIONS), options),\n      account = _a.account,\n      index = _a.index,\n      coinType = _a.coinType;\n    var mnemonic = options.mnemonic;\n    if (mnemonic === undefined) {\n      mnemonic = bip39.generateMnemonic(256);\n    }\n    var seed = bip39.mnemonicToSeedSync(mnemonic);\n    var masterKey = bip32.fromSeed(seed);\n    var hdPathLuna = \"m/44'/\".concat(coinType, \"'/\").concat(account, \"'/0/\").concat(index);\n    var terraHD = masterKey.derivePath(hdPathLuna);\n    var privateKey = terraHD.privateKey;\n    if (!privateKey) {\n      throw new Error('Failed to derive key pair');\n    }\n    _this = _super.call(this, privateKey) || this;\n    _this.mnemonic = mnemonic;\n    return _this;\n  }\n  return MnemonicKey;\n}(RawKey_1.RawKey);\nexports.MnemonicKey = MnemonicKey;\n//# sourceMappingURL=MnemonicKey.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}