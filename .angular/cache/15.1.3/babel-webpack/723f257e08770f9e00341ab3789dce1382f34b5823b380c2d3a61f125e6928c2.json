{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar readable_stream_1 = require(\"readable-stream\");\nvar noop = function () {\n  return undefined;\n};\nvar PostMessageStream = /** @class */function (_super) {\n  __extends(PostMessageStream, _super);\n  function PostMessageStream(_a) {\n    var name = _a.name,\n      target = _a.target,\n      targetWindow = _a.targetWindow;\n    var _this = _super.call(this, {\n      objectMode: true\n    }) || this;\n    _this._name = name;\n    _this._target = target;\n    _this._targetWindow = targetWindow || window;\n    _this._origin = targetWindow ? '*' : location.origin;\n    // initialization flags\n    _this._init = false;\n    _this._haveSyn = false;\n    _this._onMessage = _this._onMessage.bind(_this);\n    window.addEventListener('message', _this._onMessage, false);\n    // send syncorization message\n    _this._write('SYN', null, noop);\n    _this.cork();\n    return _this;\n  }\n  PostMessageStream.prototype._destroy = function () {\n    // console.log('PostMessageStream: destroy');\n    window.removeEventListener('message', this._onMessage, false);\n  };\n  PostMessageStream.prototype._onMessage = function (event) {\n    var msg = event.data;\n    // validate message\n    if (this._origin !== '*' && event.origin !== this._origin) return;\n    if (event.source !== this._targetWindow) return;\n    if (typeof msg !== 'object') return;\n    if (msg.target !== this._name) return;\n    if (!msg.data) return;\n    if (!this._init) {\n      if (msg.data === 'SYN') {\n        this._haveSyn = true;\n        this._write('ACK', null, noop);\n      } else if (msg.data === 'ACK') {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write('ACK', null, noop);\n        }\n        this.uncork();\n      }\n    } else {\n      // forward message\n      try {\n        this.push(msg.data);\n      } catch (err) {\n        this.emit('error', err);\n      }\n    }\n  };\n  PostMessageStream.prototype._read = function () {\n    return undefined;\n  };\n  PostMessageStream.prototype._write = function (data, _encoding, cb) {\n    var message = {\n      target: this._target,\n      data: data\n    };\n    this._targetWindow.postMessage(message, this._origin);\n    cb(null);\n  };\n  return PostMessageStream;\n}(readable_stream_1.Duplex);\nexports.default = PostMessageStream;\n//# sourceMappingURL=PostMessageStream.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}