{"ast":null,"code":"import { AccAddress } from '@terra-money/terra.js';\nimport { WalletStatus } from './types';\nexport function createConnectedWallet({\n  connection,\n  post,\n  sign,\n  signBytes,\n  supportFeatures,\n  wallets,\n  status,\n  network\n}) {\n  try {\n    if (status === WalletStatus.WALLET_CONNECTED && wallets.length > 0 && AccAddress.validate(wallets[0].terraAddress) && !!connection) {\n      const {\n        terraAddress,\n        connectType,\n        design\n      } = wallets[0];\n      return {\n        network,\n        terraAddress: terraAddress,\n        walletAddress: terraAddress,\n        design,\n        post: tx => {\n          return post(tx, terraAddress);\n        },\n        sign: tx => {\n          return sign(tx, terraAddress);\n        },\n        signBytes: bytes => {\n          return signBytes(bytes, terraAddress);\n        },\n        availablePost: supportFeatures.has('post'),\n        availableSign: supportFeatures.has('sign'),\n        availableSignBytes: supportFeatures.has('sign-bytes'),\n        connectType,\n        connection\n      };\n    } else {\n      return undefined;\n    }\n  } catch (_a) {\n    return undefined;\n  }\n}\nexport function createInstallableWallets({\n  status,\n  installations\n}) {\n  if (status === WalletStatus.WALLET_NOT_CONNECTED) {\n    return installations;\n  }\n  return undefined;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbGV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL0B0ZXJyYS1tb25leS93YWxsZXQtdHlwZXMvd2FsbGV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQW1CLE1BQU0sdUJBQXVCLENBQUM7QUFDcEUsT0FBTyxFQVNMLFlBQVksR0FDYixNQUFNLFNBQVMsQ0FBQztBQWlDakIsTUFBTSxVQUFVLHFCQUFxQixDQUFDLEVBQ3BDLFVBQVUsRUFDVixJQUFJLEVBQ0osSUFBSSxFQUNKLFNBQVMsRUFDVCxlQUFlLEVBQ2YsT0FBTyxFQUNQLE1BQU0sRUFDTixPQUFPLEdBQ3FCO0lBQzVCLElBQUk7UUFDRixJQUNFLE1BQU0sS0FBSyxZQUFZLENBQUMsZ0JBQWdCO1lBQ3hDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztZQUNsQixVQUFVLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDNUMsQ0FBQyxDQUFDLFVBQVUsRUFDWjtZQUNBLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV6RCxPQUFPO2dCQUNMLE9BQU87Z0JBQ1AsWUFBWSxFQUFFLFlBQXlCO2dCQUN2QyxhQUFhLEVBQUUsWUFBeUI7Z0JBQ3hDLE1BQU07Z0JBQ04sSUFBSSxFQUFFLENBQUMsRUFBbUIsRUFBRSxFQUFFO29CQUM1QixPQUFPLElBQUksQ0FBQyxFQUFFLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ2hDLENBQUM7Z0JBQ0QsSUFBSSxFQUFFLENBQUMsRUFBbUIsRUFBRSxFQUFFO29CQUM1QixPQUFPLElBQUksQ0FBQyxFQUFFLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ2hDLENBQUM7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsS0FBYSxFQUFFLEVBQUU7b0JBQzNCLE9BQU8sU0FBUyxDQUFDLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDeEMsQ0FBQztnQkFDRCxhQUFhLEVBQUUsZUFBZSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7Z0JBQzFDLGFBQWEsRUFBRSxlQUFlLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztnQkFDMUMsa0JBQWtCLEVBQUUsZUFBZSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUM7Z0JBQ3JELFdBQVc7Z0JBQ1gsVUFBVTthQUNYLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxTQUFTLENBQUM7U0FDbEI7S0FDRjtJQUFDLFdBQU07UUFDTixPQUFPLFNBQVMsQ0FBQztLQUNsQjtBQUNILENBQUM7QUFPRCxNQUFNLFVBQVUsd0JBQXdCLENBQUMsRUFDdkMsTUFBTSxFQUNOLGFBQWEsR0FDWTtJQUN6QixJQUFJLE1BQU0sS0FBSyxZQUFZLENBQUMsb0JBQW9CLEVBQUU7UUFDaEQsT0FBTyxhQUFhLENBQUM7S0FDdEI7SUFDRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjQWRkcmVzcywgQ3JlYXRlVHhPcHRpb25zIH0gZnJvbSAnQHRlcnJhLW1vbmV5L3RlcnJhLmpzJztcbmltcG9ydCB7XG4gIENvbm5lY3Rpb24sXG4gIENvbm5lY3RUeXBlLFxuICBJbnN0YWxsYXRpb24sXG4gIE5ldHdvcmtJbmZvLFxuICBTaWduQnl0ZXNSZXN1bHQsXG4gIFNpZ25SZXN1bHQsXG4gIFR4UmVzdWx0LFxuICBXYWxsZXRJbmZvLFxuICBXYWxsZXRTdGF0dXMsXG59IGZyb20gJy4vdHlwZXMnO1xuXG50eXBlIEh1bWFuQWRkciA9IHN0cmluZyAmIHsgX190eXBlOiAnSHVtYW5BZGRyJyB9O1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbm5lY3RlZFdhbGxldCB7XG4gIG5ldHdvcms6IE5ldHdvcmtJbmZvO1xuICB3YWxsZXRBZGRyZXNzOiBIdW1hbkFkZHI7XG4gIC8qKiB0ZXJyYUFkZHJlc3MgaXMgc2FtZSBhcyB3YWxsZXRBZGRyZXNzICovXG4gIHRlcnJhQWRkcmVzczogSHVtYW5BZGRyO1xuICBkZXNpZ24/OiBzdHJpbmc7XG4gIHBvc3Q6ICh0eDogQ3JlYXRlVHhPcHRpb25zKSA9PiBQcm9taXNlPFR4UmVzdWx0PjtcbiAgc2lnbjogKHR4OiBDcmVhdGVUeE9wdGlvbnMpID0+IFByb21pc2U8U2lnblJlc3VsdD47XG4gIHNpZ25CeXRlczogKGJ5dGVzOiBCdWZmZXIpID0+IFByb21pc2U8U2lnbkJ5dGVzUmVzdWx0PjtcbiAgYXZhaWxhYmxlUG9zdDogYm9vbGVhbjtcbiAgYXZhaWxhYmxlU2lnbjogYm9vbGVhbjtcbiAgYXZhaWxhYmxlU2lnbkJ5dGVzOiBib29sZWFuO1xuICBjb25uZWN0VHlwZTogQ29ubmVjdFR5cGU7XG4gIGNvbm5lY3Rpb246IENvbm5lY3Rpb247XG59XG5cbmludGVyZmFjZSBDcmVhdGVDb25uZWN0ZWRXYWxsZXRQYXJhbXMge1xuICBzdGF0dXM6IFdhbGxldFN0YXR1cztcbiAgbmV0d29yazogTmV0d29ya0luZm87XG4gIHdhbGxldHM6IFdhbGxldEluZm9bXTtcbiAgY29ubmVjdGlvbjogQ29ubmVjdGlvbiB8IHVuZGVmaW5lZDtcbiAgcG9zdDogKHR4OiBDcmVhdGVUeE9wdGlvbnMsIHRlcnJhQWRkcmVzcz86IHN0cmluZykgPT4gUHJvbWlzZTxUeFJlc3VsdD47XG4gIHNpZ246ICh0eDogQ3JlYXRlVHhPcHRpb25zLCB0ZXJyYUFkZHJlc3M/OiBzdHJpbmcpID0+IFByb21pc2U8U2lnblJlc3VsdD47XG4gIHNpZ25CeXRlczogKGJ5dGVzOiBCdWZmZXIsIHRlcnJhQWRkcmVzcz86IHN0cmluZykgPT4gUHJvbWlzZTxTaWduQnl0ZXNSZXN1bHQ+O1xuICBzdXBwb3J0RmVhdHVyZXM6IFNldDxcbiAgICAncG9zdCcgfCAnc2lnbicgfCAnc2lnbi1ieXRlcycgfCAnY3cyMC10b2tlbicgfCAnbmV0d29yaydcbiAgPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3RlZFdhbGxldCh7XG4gIGNvbm5lY3Rpb24sXG4gIHBvc3QsXG4gIHNpZ24sXG4gIHNpZ25CeXRlcyxcbiAgc3VwcG9ydEZlYXR1cmVzLFxuICB3YWxsZXRzLFxuICBzdGF0dXMsXG4gIG5ldHdvcmssXG59OiBDcmVhdGVDb25uZWN0ZWRXYWxsZXRQYXJhbXMpOiBDb25uZWN0ZWRXYWxsZXQgfCB1bmRlZmluZWQge1xuICB0cnkge1xuICAgIGlmIChcbiAgICAgIHN0YXR1cyA9PT0gV2FsbGV0U3RhdHVzLldBTExFVF9DT05ORUNURUQgJiZcbiAgICAgIHdhbGxldHMubGVuZ3RoID4gMCAmJlxuICAgICAgQWNjQWRkcmVzcy52YWxpZGF0ZSh3YWxsZXRzWzBdLnRlcnJhQWRkcmVzcykgJiZcbiAgICAgICEhY29ubmVjdGlvblxuICAgICkge1xuICAgICAgY29uc3QgeyB0ZXJyYUFkZHJlc3MsIGNvbm5lY3RUeXBlLCBkZXNpZ24gfSA9IHdhbGxldHNbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5ldHdvcmssXG4gICAgICAgIHRlcnJhQWRkcmVzczogdGVycmFBZGRyZXNzIGFzIEh1bWFuQWRkcixcbiAgICAgICAgd2FsbGV0QWRkcmVzczogdGVycmFBZGRyZXNzIGFzIEh1bWFuQWRkcixcbiAgICAgICAgZGVzaWduLFxuICAgICAgICBwb3N0OiAodHg6IENyZWF0ZVR4T3B0aW9ucykgPT4ge1xuICAgICAgICAgIHJldHVybiBwb3N0KHR4LCB0ZXJyYUFkZHJlc3MpO1xuICAgICAgICB9LFxuICAgICAgICBzaWduOiAodHg6IENyZWF0ZVR4T3B0aW9ucykgPT4ge1xuICAgICAgICAgIHJldHVybiBzaWduKHR4LCB0ZXJyYUFkZHJlc3MpO1xuICAgICAgICB9LFxuICAgICAgICBzaWduQnl0ZXM6IChieXRlczogQnVmZmVyKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHNpZ25CeXRlcyhieXRlcywgdGVycmFBZGRyZXNzKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXZhaWxhYmxlUG9zdDogc3VwcG9ydEZlYXR1cmVzLmhhcygncG9zdCcpLFxuICAgICAgICBhdmFpbGFibGVTaWduOiBzdXBwb3J0RmVhdHVyZXMuaGFzKCdzaWduJyksXG4gICAgICAgIGF2YWlsYWJsZVNpZ25CeXRlczogc3VwcG9ydEZlYXR1cmVzLmhhcygnc2lnbi1ieXRlcycpLFxuICAgICAgICBjb25uZWN0VHlwZSxcbiAgICAgICAgY29ubmVjdGlvbixcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbmludGVyZmFjZSBDcmVhdGVJbnN0YWxsYWJsZVdhbGxldHMge1xuICBzdGF0dXM6IFdhbGxldFN0YXR1cztcbiAgaW5zdGFsbGF0aW9uczogSW5zdGFsbGF0aW9uW107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnN0YWxsYWJsZVdhbGxldHMoe1xuICBzdGF0dXMsXG4gIGluc3RhbGxhdGlvbnMsXG59OiBDcmVhdGVJbnN0YWxsYWJsZVdhbGxldHMpOiBJbnN0YWxsYXRpb25bXSB8IHVuZGVmaW5lZCB7XG4gIGlmIChzdGF0dXMgPT09IFdhbGxldFN0YXR1cy5XQUxMRVRfTk9UX0NPTk5FQ1RFRCkge1xuICAgIHJldHVybiBpbnN0YWxsYXRpb25zO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG4iXX0=","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}