{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let PercentSuperscriptPipe = /*#__PURE__*/(() => {\n  class PercentSuperscriptPipe {\n    constructor(percentPipe) {\n      this.percentPipe = percentPipe;\n    }\n    extractE(value) {\n      const indexOfE = value.indexOf('e');\n      return value.substring(indexOfE);\n    }\n    transform(value, decimals, digitsInfo, locale) {\n      if (value == null) {\n        return value;\n      }\n      if (value > 1e7) {\n        try {\n          const valueString = value.toExponential(2).toString();\n          const leftPart = valueString.substring(0, 4);\n          const rightPart = valueString.substring(4);\n          const extractedEPart = this.extractE(rightPart);\n          // const signOfE = extractedEPart.substring(1, 2);\n          const eValue = +extractedEPart.substring(2);\n          const powerBy = eValue + 2;\n          const rightPartSuperscript = `10<sup>${powerBy}</sup>`;\n          return ` ${leftPart}x${rightPartSuperscript}%`;\n        } catch (e) {\n          console.error('percentsuperscript', e, value);\n          return ` ` + this.percentPipe.transform(value, digitsInfo, locale);\n        }\n      }\n      return ` ` + this.percentPipe.transform(value, digitsInfo, locale);\n    }\n  }\n  PercentSuperscriptPipe.ɵfac = function PercentSuperscriptPipe_Factory(t) {\n    return new (t || PercentSuperscriptPipe)(i0.ɵɵdirectiveInject(i1.PercentPipe, 16));\n  };\n  PercentSuperscriptPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"percentsuperscript\",\n    type: PercentSuperscriptPipe,\n    pure: true\n  });\n  return PercentSuperscriptPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}