{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PinCodesProposal = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar proposal_1 = require(\"@terra-money/terra.proto/cosmwasm/wasm/v1/proposal\");\nvar Long = __importStar(require(\"long\"));\n/**\n * PinCodesProposal gov proposal content type to pin a set of code ids in the\n * wasmvm cache.\n */\nvar PinCodesProposal = /** @class */function (_super) {\n  __extends(PinCodesProposal, _super);\n  /**\n   * @param title a short summary\n   * @param description a human readable text\n   * @param code_ids the address of the smart code_ids\n   */\n  function PinCodesProposal(title, description, code_ids) {\n    var _this = _super.call(this) || this;\n    _this.title = title;\n    _this.description = description;\n    _this.code_ids = code_ids;\n    return _this;\n  }\n  PinCodesProposal.fromAmino = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      title = _a.title,\n      description = _a.description,\n      code_ids = _a.code_ids;\n    return new PinCodesProposal(title, description, code_ids.map(function (cid) {\n      return Number.parseInt(cid);\n    }));\n  };\n  PinCodesProposal.prototype.toAmino = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      code_ids = _a.code_ids;\n    return {\n      type: 'wasm/PinCodesProposal',\n      value: {\n        title: title,\n        description: description,\n        code_ids: code_ids.map(function (cid) {\n          return cid.toFixed();\n        })\n      }\n    };\n  };\n  PinCodesProposal.fromProto = function (proto, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new PinCodesProposal(proto.title, proto.description, proto.codeIds.map(function (codeId) {\n      return codeId.toNumber();\n    }));\n  };\n  PinCodesProposal.prototype.toProto = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      code_ids = _a.code_ids;\n    return proposal_1.PinCodesProposal.fromPartial({\n      title: title,\n      description: description,\n      codeIds: code_ids.map(function (cid) {\n        return Long.fromNumber(cid);\n      })\n    });\n  };\n  PinCodesProposal.prototype.packAny = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmwasm.wasm.v1.PinCodesProposal',\n      value: proposal_1.PinCodesProposal.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  PinCodesProposal.unpackAny = function (msgAny, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return PinCodesProposal.fromProto(proposal_1.PinCodesProposal.decode(msgAny.value), isClassic);\n  };\n  PinCodesProposal.fromData = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data,\n      title = _a.title,\n      description = _a.description,\n      code_ids = _a.code_ids;\n    return new PinCodesProposal(title, description, code_ids.map(function (cid) {\n      return Number.parseInt(cid);\n    }));\n  };\n  PinCodesProposal.prototype.toData = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      code_ids = _a.code_ids;\n    return {\n      '@type': '/cosmwasm.wasm.v1.PinCodesProposal',\n      title: title,\n      description: description,\n      code_ids: code_ids.map(function (cid) {\n        return cid.toFixed();\n      })\n    };\n  };\n  return PinCodesProposal;\n}(json_1.JSONSerializable);\nexports.PinCodesProposal = PinCodesProposal;\n//# sourceMappingURL=PinCodesProposal.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}