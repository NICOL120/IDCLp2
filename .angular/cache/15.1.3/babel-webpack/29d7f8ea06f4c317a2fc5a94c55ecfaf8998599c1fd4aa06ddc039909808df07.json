{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessConfig = exports.AccessType = void 0;\nvar types_1 = require(\"@terra-money/terra.proto/cosmwasm/wasm/v1/types\");\nObject.defineProperty(exports, \"AccessType\", {\n  enumerable: true,\n  get: function () {\n    return types_1.AccessType;\n  }\n});\nvar json_1 = require(\"../../util/json\");\nvar util_1 = require(\"./util\");\n/**\n *\n */\nvar AccessConfig = /** @class */function (_super) {\n  __extends(AccessConfig, _super);\n  /**\n   * @param permission access type\n   * @param address\n   */\n  function AccessConfig(permission, address) {\n    var _this = _super.call(this) || this;\n    _this.permission = permission;\n    _this.address = address;\n    return _this;\n  }\n  AccessConfig.fromAmino = function (data) {\n    return new AccessConfig((0, util_1.convertAccessTypeFromJSON)(data.permission), data.address);\n  };\n  AccessConfig.prototype.toAmino = function () {\n    var res = {\n      permission: (0, types_1.accessTypeToJSON)(this.permission),\n      address: this.address\n    };\n    return res;\n  };\n  AccessConfig.fromData = function (data) {\n    // FIXME: new core returns human-friendly string like 'Everybody'.\n    // but convertAccessTypeFromJSON requires \"ACCESS_TYPE_EVERYBODY\"\n    // TODO: find out why the strings arent't matching\n    return new AccessConfig((0, util_1.convertAccessTypeFromJSON)(data.permission), data.address);\n  };\n  AccessConfig.prototype.toData = function () {\n    var res = {\n      permission: (0, types_1.accessTypeToJSON)(this.permission),\n      address: this.address\n    };\n    return res;\n  };\n  AccessConfig.fromProto = function (proto) {\n    return new AccessConfig(proto.permission, proto.address);\n  };\n  AccessConfig.prototype.toProto = function () {\n    return types_1.AccessConfig.fromPartial({\n      permission: this.permission,\n      address: this.address\n    });\n  };\n  return AccessConfig;\n}(json_1.JSONSerializable);\nexports.AccessConfig = AccessConfig;\n//# sourceMappingURL=AccessConfig.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}