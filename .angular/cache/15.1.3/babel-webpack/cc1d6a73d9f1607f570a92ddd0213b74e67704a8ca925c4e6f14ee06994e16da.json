{"ast":null,"code":"import { debouncify } from './debouncify';\nexport function debounce(delayMs) {\n  return (target, propertyName, descriptor) => {\n    if (descriptor.value) {\n      const methodsMap = new WeakMap();\n      const originalMethod = descriptor.value;\n      descriptor.value = function (...args) {\n        if (!methodsMap.has(this)) {\n          methodsMap.set(this, debouncify(originalMethod, delayMs).bind(this));\n        }\n        methodsMap.get(this)(...args);\n      };\n      return descriptor;\n    }\n    throw new Error('@debounce is applicable only on a methods.');\n  };\n}\n//# sourceMappingURL=debounce.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}