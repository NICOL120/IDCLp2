{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else {\n    var a = factory();\n    for (var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n  }\n})(this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // identity function for calling harmony imports with the correct context\n      /******/\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            /******/configurable: false,\n            /******/enumerable: true,\n            /******/get: getter\n            /******/\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = 1);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var util_1 = __webpack_require__(3);\n      function isBrowserHeaders(arg) {\n        return typeof arg === \"object\" && typeof arg.headersMap === \"object\" && typeof arg.forEach === \"function\";\n      }\n      var BrowserHeaders = function () {\n        function BrowserHeaders(init, options) {\n          if (init === void 0) {\n            init = {};\n          }\n          if (options === void 0) {\n            options = {\n              splitValues: false\n            };\n          }\n          var _this = this;\n          this.headersMap = {};\n          if (init) {\n            if (typeof Headers !== \"undefined\" && init instanceof Headers) {\n              var keys = util_1.getHeaderKeys(init);\n              keys.forEach(function (key) {\n                var values = util_1.getHeaderValues(init, key);\n                values.forEach(function (value) {\n                  if (options.splitValues) {\n                    _this.append(key, util_1.splitHeaderValue(value));\n                  } else {\n                    _this.append(key, value);\n                  }\n                });\n              });\n            } else if (isBrowserHeaders(init)) {\n              init.forEach(function (key, values) {\n                _this.append(key, values);\n              });\n            } else if (typeof Map !== \"undefined\" && init instanceof Map) {\n              var asMap = init;\n              asMap.forEach(function (value, key) {\n                _this.append(key, value);\n              });\n            } else if (typeof init === \"string\") {\n              this.appendFromString(init);\n            } else if (typeof init === \"object\") {\n              Object.getOwnPropertyNames(init).forEach(function (key) {\n                var asObject = init;\n                var values = asObject[key];\n                if (Array.isArray(values)) {\n                  values.forEach(function (value) {\n                    _this.append(key, value);\n                  });\n                } else {\n                  _this.append(key, values);\n                }\n              });\n            }\n          }\n        }\n        BrowserHeaders.prototype.appendFromString = function (str) {\n          var pairs = str.split(\"\\r\\n\");\n          for (var i = 0; i < pairs.length; i++) {\n            var p = pairs[i];\n            var index = p.indexOf(\":\");\n            if (index > 0) {\n              var key = p.substring(0, index).trim();\n              var value = p.substring(index + 1).trim();\n              this.append(key, value);\n            }\n          }\n        };\n        BrowserHeaders.prototype.delete = function (key, value) {\n          var normalizedKey = util_1.normalizeName(key);\n          if (value === undefined) {\n            delete this.headersMap[normalizedKey];\n          } else {\n            var existing = this.headersMap[normalizedKey];\n            if (existing) {\n              var index = existing.indexOf(value);\n              if (index >= 0) {\n                existing.splice(index, 1);\n              }\n              if (existing.length === 0) {\n                delete this.headersMap[normalizedKey];\n              }\n            }\n          }\n        };\n        BrowserHeaders.prototype.append = function (key, value) {\n          var _this = this;\n          var normalizedKey = util_1.normalizeName(key);\n          if (!Array.isArray(this.headersMap[normalizedKey])) {\n            this.headersMap[normalizedKey] = [];\n          }\n          if (Array.isArray(value)) {\n            value.forEach(function (arrayValue) {\n              _this.headersMap[normalizedKey].push(util_1.normalizeValue(arrayValue));\n            });\n          } else {\n            this.headersMap[normalizedKey].push(util_1.normalizeValue(value));\n          }\n        };\n        BrowserHeaders.prototype.set = function (key, value) {\n          var normalizedKey = util_1.normalizeName(key);\n          if (Array.isArray(value)) {\n            var normalized_1 = [];\n            value.forEach(function (arrayValue) {\n              normalized_1.push(util_1.normalizeValue(arrayValue));\n            });\n            this.headersMap[normalizedKey] = normalized_1;\n          } else {\n            this.headersMap[normalizedKey] = [util_1.normalizeValue(value)];\n          }\n        };\n        BrowserHeaders.prototype.has = function (key, value) {\n          var keyArray = this.headersMap[util_1.normalizeName(key)];\n          var keyExists = Array.isArray(keyArray);\n          if (!keyExists) {\n            return false;\n          }\n          if (value !== undefined) {\n            var normalizedValue = util_1.normalizeValue(value);\n            return keyArray.indexOf(normalizedValue) >= 0;\n          } else {\n            return true;\n          }\n        };\n        BrowserHeaders.prototype.get = function (key) {\n          var values = this.headersMap[util_1.normalizeName(key)];\n          if (values !== undefined) {\n            return values.concat();\n          }\n          return [];\n        };\n        BrowserHeaders.prototype.forEach = function (callback) {\n          var _this = this;\n          Object.getOwnPropertyNames(this.headersMap).forEach(function (key) {\n            callback(key, _this.headersMap[key]);\n          }, this);\n        };\n        BrowserHeaders.prototype.toHeaders = function () {\n          if (typeof Headers !== \"undefined\") {\n            var headers_1 = new Headers();\n            this.forEach(function (key, values) {\n              values.forEach(function (value) {\n                headers_1.append(key, value);\n              });\n            });\n            return headers_1;\n          } else {\n            throw new Error(\"Headers class is not defined\");\n          }\n        };\n        return BrowserHeaders;\n      }();\n      exports.BrowserHeaders = BrowserHeaders;\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var BrowserHeaders_1 = __webpack_require__(0);\n      exports.BrowserHeaders = BrowserHeaders_1.BrowserHeaders;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      function iterateHeaders(headers, callback) {\n        var iterator = headers[Symbol.iterator]();\n        var entry = iterator.next();\n        while (!entry.done) {\n          callback(entry.value[0]);\n          entry = iterator.next();\n        }\n      }\n      exports.iterateHeaders = iterateHeaders;\n      function iterateHeadersKeys(headers, callback) {\n        var iterator = headers.keys();\n        var entry = iterator.next();\n        while (!entry.done) {\n          callback(entry.value);\n          entry = iterator.next();\n        }\n      }\n      exports.iterateHeadersKeys = iterateHeadersKeys;\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var iterateHeaders_1 = __webpack_require__(2);\n      function normalizeName(name) {\n        if (typeof name !== \"string\") {\n          name = String(name);\n        }\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n          throw new TypeError(\"Invalid character in header field name\");\n        }\n        return name.toLowerCase();\n      }\n      exports.normalizeName = normalizeName;\n      function normalizeValue(value) {\n        if (typeof value !== \"string\") {\n          value = String(value);\n        }\n        return value;\n      }\n      exports.normalizeValue = normalizeValue;\n      function getHeaderValues(headersAsNative, key) {\n        var headers = toWindowHeaders(headersAsNative);\n        if (headers instanceof Headers && headers.getAll) {\n          return headers.getAll(key);\n        }\n        var getValue = headers.get(key);\n        if (getValue && typeof getValue === \"string\") {\n          return [getValue];\n        }\n        return getValue;\n      }\n      exports.getHeaderValues = getHeaderValues;\n      function toWindowHeaders(headersAsNative) {\n        return headersAsNative;\n      }\n      function getHeaderKeys(headersAsNative) {\n        var headers = toWindowHeaders(headersAsNative);\n        var asMap = {};\n        var keys = [];\n        if (headers.keys) {\n          iterateHeaders_1.iterateHeadersKeys(headers, function (key) {\n            if (!asMap[key]) {\n              asMap[key] = true;\n              keys.push(key);\n            }\n          });\n        } else if (headers.forEach) {\n          headers.forEach(function (_, key) {\n            if (!asMap[key]) {\n              asMap[key] = true;\n              keys.push(key);\n            }\n          });\n        } else {\n          iterateHeaders_1.iterateHeaders(headers, function (entry) {\n            var key = entry[0];\n            if (!asMap[key]) {\n              asMap[key] = true;\n              keys.push(key);\n            }\n          });\n        }\n        return keys;\n      }\n      exports.getHeaderKeys = getHeaderKeys;\n      function splitHeaderValue(str) {\n        var values = [];\n        var commaSpaceValues = str.split(\", \");\n        commaSpaceValues.forEach(function (commaSpaceValue) {\n          commaSpaceValue.split(\",\").forEach(function (commaValue) {\n            values.push(commaValue);\n          });\n        });\n        return values;\n      }\n      exports.splitHeaderValue = splitHeaderValue;\n\n      /***/\n    }\n    /******/])\n  );\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}