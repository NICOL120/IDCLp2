{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdentifiedConnection = exports.stateToJSON = exports.stateFromJSON = exports.State = void 0;\nvar connection_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/connection\");\nvar json_1 = require(\"../../../../util/json\");\nvar Version_1 = require(\"./Version\");\nvar connection_2 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/connection\");\nObject.defineProperty(exports, \"State\", {\n  enumerable: true,\n  get: function () {\n    return connection_2.State;\n  }\n});\nObject.defineProperty(exports, \"stateFromJSON\", {\n  enumerable: true,\n  get: function () {\n    return connection_2.stateFromJSON;\n  }\n});\nObject.defineProperty(exports, \"stateToJSON\", {\n  enumerable: true,\n  get: function () {\n    return connection_2.stateToJSON;\n  }\n});\nvar Counterparty_1 = require(\"./Counterparty\");\nvar long_1 = __importDefault(require(\"long\"));\n/**\n * IdentifiedConnection defines a connection with additional connection identifier field\n */\nvar IdentifiedConnection = /** @class */function (_super) {\n  __extends(IdentifiedConnection, _super);\n  /**\n   * @param id connection identifier\n   * @param client_id client associated with this connection.\n   * @param versions IBC version which can be utilised to determine encodings or protocols for channels or packets utilising this connection\n   * @param state current state of the connection end\n   * @param counterparty counterparty chain associated with this connection\n   * @param delay_period delay period associated with this connection\n   */\n  function IdentifiedConnection(id, client_id, versions, state, counterparty, delay_period) {\n    var _this = _super.call(this) || this;\n    _this.id = id;\n    _this.client_id = client_id;\n    _this.versions = versions;\n    _this.state = state;\n    _this.counterparty = counterparty;\n    _this.delay_period = delay_period;\n    return _this;\n  }\n  IdentifiedConnection.fromAmino = function (data) {\n    var id = data.id,\n      client_id = data.client_id,\n      versions = data.versions,\n      state = data.state,\n      counterparty = data.counterparty,\n      delay_period = data.delay_period;\n    return new IdentifiedConnection(id, client_id, versions.map(Version_1.Version.fromAmino), (0, connection_2.stateFromJSON)(state), counterparty ? Counterparty_1.Counterparty.fromAmino(counterparty) : undefined, Number.parseInt(delay_period));\n  };\n  IdentifiedConnection.prototype.toAmino = function () {\n    var _a = this,\n      id = _a.id,\n      client_id = _a.client_id,\n      versions = _a.versions,\n      state = _a.state,\n      counterparty = _a.counterparty,\n      delay_period = _a.delay_period;\n    var res = {\n      id: id,\n      client_id: client_id,\n      versions: versions.map(function (version) {\n        return version.toAmino();\n      }),\n      state: (0, connection_2.stateToJSON)(state),\n      counterparty: counterparty === null || counterparty === void 0 ? void 0 : counterparty.toAmino(),\n      delay_period: delay_period.toFixed()\n    };\n    return res;\n  };\n  IdentifiedConnection.fromData = function (data) {\n    var id = data.id,\n      client_id = data.client_id,\n      versions = data.versions,\n      state = data.state,\n      counterparty = data.counterparty,\n      delay_period = data.delay_period;\n    return new IdentifiedConnection(id, client_id, versions.map(Version_1.Version.fromData), (0, connection_2.stateFromJSON)(state), counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, Number.parseInt(delay_period));\n  };\n  IdentifiedConnection.prototype.toData = function () {\n    var _a = this,\n      id = _a.id,\n      client_id = _a.client_id,\n      versions = _a.versions,\n      state = _a.state,\n      counterparty = _a.counterparty,\n      delay_period = _a.delay_period;\n    var res = {\n      id: id,\n      client_id: client_id,\n      versions: versions.map(function (version) {\n        return version.toData();\n      }),\n      state: (0, connection_2.stateToJSON)(state),\n      counterparty: counterparty === null || counterparty === void 0 ? void 0 : counterparty.toData(),\n      delay_period: delay_period.toFixed()\n    };\n    return res;\n  };\n  IdentifiedConnection.fromProto = function (proto) {\n    return new IdentifiedConnection(proto.id, proto.clientId, proto.versions.map(Version_1.Version.fromProto), proto.state, proto.counterparty ? Counterparty_1.Counterparty.fromProto(proto.counterparty) : undefined, proto.delayPeriod.toNumber());\n  };\n  IdentifiedConnection.prototype.toProto = function () {\n    var _a = this,\n      id = _a.id,\n      client_id = _a.client_id,\n      versions = _a.versions,\n      state = _a.state,\n      counterparty = _a.counterparty,\n      delay_period = _a.delay_period;\n    return connection_1.IdentifiedConnection.fromPartial({\n      id: id,\n      clientId: client_id,\n      versions: versions.map(function (v) {\n        return v.toProto();\n      }),\n      state: state,\n      counterparty: counterparty === null || counterparty === void 0 ? void 0 : counterparty.toProto(),\n      delayPeriod: long_1.default.fromNumber(delay_period)\n    });\n  };\n  return IdentifiedConnection;\n}(json_1.JSONSerializable);\nexports.IdentifiedConnection = IdentifiedConnection;\n//# sourceMappingURL=IdentifiedConnection.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}