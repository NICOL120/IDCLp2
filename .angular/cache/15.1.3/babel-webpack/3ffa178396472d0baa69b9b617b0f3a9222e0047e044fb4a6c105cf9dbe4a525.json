{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\nvar BaseAccount_1 = require(\"./BaseAccount\");\nvar LazyGradedVestingAccount_1 = require(\"./LazyGradedVestingAccount\");\nvar ContinuousVestingAccount_1 = require(\"./ContinuousVestingAccount\");\nvar DelayedVestingAccount_1 = require(\"./DelayedVestingAccount\");\nvar PeriodicVestingAccount_1 = require(\"./PeriodicVestingAccount\");\nvar BaseVestingAccount_1 = require(\"./BaseVestingAccount\");\n/**\n * Stores information about an account fetched from the blockchain.\n */\nvar Account;\n(function (Account) {\n  function fromAmino(amino, isClassic) {\n    switch (amino.type) {\n      case 'core/Account':\n      case 'cosmos-sdk/BaseAccount':\n        return BaseAccount_1.BaseAccount.fromAmino(amino, isClassic);\n      case 'core/BaseVestingAccount':\n      case 'cosmos-sdk/BaseVestingAccount':\n        return BaseVestingAccount_1.BaseVestingAccount.fromAmino(amino, isClassic);\n      case 'core/LazyGradedVestingAccount':\n        return LazyGradedVestingAccount_1.LazyGradedVestingAccount.fromAmino(amino, isClassic);\n      case 'cosmos-sdk/ContinuousVestingAccount':\n        return ContinuousVestingAccount_1.ContinuousVestingAccount.fromAmino(amino, isClassic);\n      case 'cosmos-sdk/DelayedVestingAccount':\n        return DelayedVestingAccount_1.DelayedVestingAccount.fromAmino(amino, isClassic);\n      case 'cosmos-sdk/PeriodicVestingAccount':\n        return PeriodicVestingAccount_1.PeriodicVestingAccount.fromAmino(amino, isClassic);\n    }\n  }\n  Account.fromAmino = fromAmino;\n  function fromData(data, isClassic) {\n    switch (data['@type']) {\n      case '/cosmos.auth.v1beta1.BaseAccount':\n        return BaseAccount_1.BaseAccount.fromData(data, isClassic);\n      case '/cosmos.vesting.v1beta1.BaseVestingAccount':\n        return BaseVestingAccount_1.BaseVestingAccount.fromData(data, isClassic);\n      case '/terra.vesting.v1beta1.LazyGradedVestingAccount':\n        return LazyGradedVestingAccount_1.LazyGradedVestingAccount.fromData(data, isClassic);\n      case '/cosmos.vesting.v1beta1.ContinuousVestingAccount':\n        return ContinuousVestingAccount_1.ContinuousVestingAccount.fromData(data, isClassic);\n      case '/cosmos.vesting.v1beta1.DelayedVestingAccount':\n        return DelayedVestingAccount_1.DelayedVestingAccount.fromData(data, isClassic);\n      case '/cosmos.vesting.v1beta1.PeriodicVestingAccount':\n        return PeriodicVestingAccount_1.PeriodicVestingAccount.fromData(data, isClassic);\n    }\n  }\n  Account.fromData = fromData;\n  function fromProto(accountAny, isClassic) {\n    var typeUrl = accountAny.typeUrl;\n    if (typeUrl === '/cosmos.auth.v1beta1.BaseAccount') {\n      return BaseAccount_1.BaseAccount.unpackAny(accountAny, isClassic);\n    } else if (typeUrl === '/terra.vesting.v1beta1.LazyGradedVestingAccount') {\n      return LazyGradedVestingAccount_1.LazyGradedVestingAccount.unpackAny(accountAny, isClassic);\n    } else if (typeUrl === '/cosmos.vesting.v1beta1.ContinuousVestingAccount') {\n      return ContinuousVestingAccount_1.ContinuousVestingAccount.unpackAny(accountAny, isClassic);\n    } else if (typeUrl === '/cosmos.vesting.v1beta1.DelayedVestingAccount') {\n      return DelayedVestingAccount_1.DelayedVestingAccount.unpackAny(accountAny, isClassic);\n    } else if (typeUrl === '/cosmos.vesting.v1beta1.PeriodicVestingAccount') {\n      return PeriodicVestingAccount_1.PeriodicVestingAccount.unpackAny(accountAny, isClassic);\n    }\n    throw new Error(\"Account type \".concat(typeUrl, \" not recognized\"));\n  }\n  Account.fromProto = fromProto;\n})(Account = exports.Account || (exports.Account = {}));\n//# sourceMappingURL=Account.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}