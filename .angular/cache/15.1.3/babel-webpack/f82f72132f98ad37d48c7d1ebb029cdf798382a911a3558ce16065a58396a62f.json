{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgMultiSend = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar Coins_1 = require(\"../../Coins\");\nvar any_1 = require(\"@terra-money/legacy.proto/google/protobuf/any\");\n// there's no difference between two protos\n//import { MsgMultiSend as MsgMultiSend_legacy_pb } from '@terra-money/legacy.proto/cosmos/bank/v1beta1/tx';\nvar tx_1 = require(\"@terra-money/terra.proto/cosmos/bank/v1beta1/tx\");\nvar bank_1 = require(\"@terra-money/terra.proto/cosmos/bank/v1beta1/bank\");\n/**\n * If you have multiple senders and/or multiple recipients, you can use MsgMultiSend,\n * which can batch together the senders and recipients in one message to save on gas\n * fees.\n *\n * Specify the senders and recipients and their corresponding deposit contribution /\n * receiving amounts with [[MsgMultiSend.Input]] or [[MsgMultiSend.Output]].\n *\n * Example:\n *\n * ```ts\n * import { MsgMultiSend } from \"@terra-money/terra.js\";\n *\n * const inputs: MsgMultiSend.Input[] = [\n *    new MsgMultiSend.Input(\n *      'terra105rz2q5a4w7nv7239tl9c4px5cjy7axx3axf6p',\n *      {\n *        ukrw: 123123,\n *      })\n *    ),\n *    new MsgMultiSend.Input('terra105rz2q5a4w7nv7239tl9c4px5cjy7axx3axfad', [\n *      new Coin('uluna', 123123),\n *    ]),\n *  ];\n *   const outputs: MsgMultiSend.Output[] = [\n *    new MsgMultiSend.Output(\n *      'terra105rz2q5a4w7nv7239tl9c4px5cjy7axx3axfad',\n *        {\n *          ukrw: 123123,\n *        }\n *    ),\n *    new MsgMultiSend.Output('terra105rz2q5a4w7nv7239tl9c4px5cjy7axx3axfga',\n *      {\n *        uluna: 123123,\n *      }\n *    ),\n *  ];\n *  const multisend = new MsgMultiSend(inputs, outputs);\n * ```\n */\nvar MsgMultiSend = /** @class */function (_super) {\n  __extends(MsgMultiSend, _super);\n  /**\n   * @param inputs inputs\n   * @param outputs outputs\n   */\n  function MsgMultiSend(inputs, outputs) {\n    var _this = _super.call(this) || this;\n    _this.inputs = inputs;\n    _this.outputs = outputs;\n    return _this;\n  }\n  MsgMultiSend.fromAmino = function (data, _) {\n    _;\n    var _a = data.value,\n      inputs = _a.inputs,\n      outputs = _a.outputs;\n    return new MsgMultiSend(inputs.map(function (i) {\n      return MsgMultiSend.Input.fromAmino(i);\n    }), outputs.map(function (o) {\n      return MsgMultiSend.Output.fromAmino(o);\n    }));\n  };\n  MsgMultiSend.prototype.toAmino = function (isClassic) {\n    var _a = this,\n      inputs = _a.inputs,\n      outputs = _a.outputs;\n    return {\n      type: isClassic ? 'bank/MsgMultiSend' : 'cosmos-sdk/MsgMultiSend',\n      value: {\n        inputs: inputs.map(function (i) {\n          return i.toAmino();\n        }),\n        outputs: outputs.map(function (o) {\n          return o.toAmino();\n        })\n      }\n    };\n  };\n  MsgMultiSend.fromData = function (data, _) {\n    _;\n    var inputs = data.inputs,\n      outputs = data.outputs;\n    return new MsgMultiSend(inputs.map(function (i) {\n      return MsgMultiSend.Input.fromData(i);\n    }), outputs.map(function (o) {\n      return MsgMultiSend.Output.fromData(o);\n    }));\n  };\n  MsgMultiSend.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      inputs = _a.inputs,\n      outputs = _a.outputs;\n    return {\n      '@type': '/cosmos.bank.v1beta1.MsgMultiSend',\n      inputs: inputs.map(function (i) {\n        return i.toData();\n      }),\n      outputs: outputs.map(function (o) {\n        return o.toData();\n      })\n    };\n  };\n  MsgMultiSend.fromProto = function (proto, _) {\n    _;\n    return new MsgMultiSend(proto.inputs.map(function (i) {\n      return MsgMultiSend.Input.fromProto(i);\n    }), proto.outputs.map(function (o) {\n      return MsgMultiSend.Output.fromProto(o);\n    }));\n  };\n  MsgMultiSend.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      inputs = _a.inputs,\n      outputs = _a.outputs;\n    return tx_1.MsgMultiSend.fromPartial({\n      inputs: inputs.map(function (i) {\n        return i.toProto();\n      }),\n      outputs: outputs.map(function (i) {\n        return i.toProto();\n      })\n    });\n  };\n  MsgMultiSend.prototype.packAny = function (isClassic) {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.bank.v1beta1.MsgMultiSend',\n      value: tx_1.MsgMultiSend.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  MsgMultiSend.unpackAny = function (msgAny, isClassic) {\n    return MsgMultiSend.fromProto(tx_1.MsgMultiSend.decode(msgAny.value), isClassic);\n  };\n  return MsgMultiSend;\n}(json_1.JSONSerializable);\nexports.MsgMultiSend = MsgMultiSend;\n(function (MsgMultiSend) {\n  var Input = /** @class */function (_super) {\n    __extends(Input, _super);\n    /**\n     * @param address address\n     * @param coinsInput coins-compatible input\n     */\n    function Input(address, coinsInput) {\n      var _this = _super.call(this) || this;\n      _this.address = address;\n      _this.coins = new Coins_1.Coins(coinsInput);\n      return _this;\n    }\n    Input.prototype.toAmino = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return {\n        address: address,\n        coins: coins.toAmino()\n      };\n    };\n    Input.fromAmino = function (data, _) {\n      _;\n      var address = data.address,\n        coins = data.coins;\n      return new Input(address, Coins_1.Coins.fromAmino(coins));\n    };\n    Input.prototype.toData = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return {\n        address: address,\n        coins: coins.toData()\n      };\n    };\n    Input.fromData = function (data, _) {\n      _;\n      var address = data.address,\n        coins = data.coins;\n      return new Input(address, Coins_1.Coins.fromData(coins));\n    };\n    Input.prototype.toProto = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return bank_1.Input.fromPartial({\n        address: address,\n        coins: coins.toProto()\n      });\n    };\n    Input.fromProto = function (proto, _) {\n      _;\n      return new Input(proto.address, Coins_1.Coins.fromProto(proto.coins));\n    };\n    return Input;\n  }(json_1.JSONSerializable);\n  MsgMultiSend.Input = Input;\n  var Output = /** @class */function (_super) {\n    __extends(Output, _super);\n    /**\n     * @param address address\n     * @param coinsOutput coins-compatible input\n     */\n    function Output(address, coinsInput) {\n      var _this = _super.call(this) || this;\n      _this.address = address;\n      _this.coins = new Coins_1.Coins(coinsInput);\n      return _this;\n    }\n    Output.prototype.toAmino = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return {\n        address: address,\n        coins: coins.toAmino()\n      };\n    };\n    Output.fromAmino = function (data, _) {\n      _;\n      var address = data.address,\n        coins = data.coins;\n      return new Output(address, Coins_1.Coins.fromAmino(coins));\n    };\n    Output.prototype.toData = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return {\n        address: address,\n        coins: coins.toData()\n      };\n    };\n    Output.fromData = function (data, _) {\n      _;\n      var address = data.address,\n        coins = data.coins;\n      return new Output(address, Coins_1.Coins.fromData(coins));\n    };\n    Output.prototype.toProto = function (_) {\n      _;\n      var _a = this,\n        address = _a.address,\n        coins = _a.coins;\n      return bank_1.Output.fromPartial({\n        address: address,\n        coins: coins.toProto()\n      });\n    };\n    Output.fromProto = function (proto, _) {\n      _;\n      return new Output(proto.address, Coins_1.Coins.fromProto(proto.coins));\n    };\n    return Output;\n  }(json_1.JSONSerializable);\n  MsgMultiSend.Output = Output;\n})(MsgMultiSend = exports.MsgMultiSend || (exports.MsgMultiSend = {}));\nexports.MsgMultiSend = MsgMultiSend;\n//# sourceMappingURL=MsgMultiSend.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}