{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExecuteContractProposal = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar Coins_1 = require(\"../../Coins\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar proposal_1 = require(\"@terra-money/terra.proto/cosmwasm/wasm/v1/proposal\");\n/**\n * ExecuteContractProposal gov proposal content type to call execute on a\n * contract.\n */\nvar ExecuteContractProposal = /** @class */function (_super) {\n  __extends(ExecuteContractProposal, _super);\n  /**\n   * @param title a short summary\n   * @param description a human readable text\n   * @param run_as contract user\n   * @param contract contract address\n   * @param execute_msg HandleMsg to pass as arguments for contract invocation\n   * @param coins coins to be sent to contract\n   */\n  function ExecuteContractProposal(title, description, run_as, contract, execute_msg, coins) {\n    if (coins === void 0) {\n      coins = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.title = title;\n    _this.description = description;\n    _this.run_as = run_as;\n    _this.contract = contract;\n    _this.execute_msg = execute_msg;\n    _this.coins = new Coins_1.Coins(coins);\n    return _this;\n  }\n  ExecuteContractProposal.fromAmino = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      title = _a.title,\n      description = _a.description,\n      run_as = _a.run_as,\n      contract = _a.contract,\n      msg = _a.msg,\n      funds = _a.funds;\n    return new ExecuteContractProposal(title, description, run_as, contract, msg, Coins_1.Coins.fromAmino(funds));\n  };\n  ExecuteContractProposal.prototype.toAmino = function (isClassic) {\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      run_as = _a.run_as,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return {\n      type: 'wasm/ExecuteContractProposal',\n      value: {\n        title: title,\n        description: description,\n        run_as: run_as,\n        contract: contract,\n        msg: (0, json_1.removeNull)(execute_msg),\n        funds: coins.toAmino()\n      }\n    };\n  };\n  ExecuteContractProposal.fromProto = function (proto, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new ExecuteContractProposal(proto.title, proto.description, proto.runAs, proto.contract, JSON.parse(Buffer.from(proto.msg).toString('utf-8')), Coins_1.Coins.fromProto(proto.funds));\n  };\n  ExecuteContractProposal.prototype.toProto = function (isClassic) {\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      run_as = _a.run_as,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    } else {\n      return proposal_1.ExecuteContractProposal.fromPartial({\n        title: title,\n        description: description,\n        funds: coins.toProto(),\n        contract: contract,\n        runAs: run_as,\n        msg: Buffer.from(JSON.stringify((0, json_1.removeNull)(execute_msg)), 'utf-8')\n      });\n    }\n  };\n  ExecuteContractProposal.prototype.packAny = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    } else {\n      return any_1.Any.fromPartial({\n        typeUrl: '/cosmwasm.wasm.v1.ExecuteContractProposal',\n        value: proposal_1.ExecuteContractProposal.encode(this.toProto(isClassic)).finish()\n      });\n    }\n  };\n  ExecuteContractProposal.unpackAny = function (msgAny, isClassic) {\n    return ExecuteContractProposal.fromProto(proposal_1.ExecuteContractProposal.decode(msgAny.value), isClassic);\n  };\n  ExecuteContractProposal.fromData = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data,\n      title = _a.title,\n      description = _a.description,\n      run_as = _a.run_as,\n      contract = _a.contract,\n      msg = _a.msg,\n      funds = _a.funds;\n    return new ExecuteContractProposal(title, description, run_as, contract, msg, Coins_1.Coins.fromData(funds));\n  };\n  ExecuteContractProposal.prototype.toData = function (isClassic) {\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      run_as = _a.run_as,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    } else {\n      return {\n        '@type': '/cosmwasm.wasm.v1.ExecuteContractProposal',\n        title: title,\n        description: description,\n        run_as: run_as,\n        contract: contract,\n        msg: execute_msg,\n        funds: coins.toData()\n      };\n    }\n  };\n  return ExecuteContractProposal;\n}(json_1.JSONSerializable);\nexports.ExecuteContractProposal = ExecuteContractProposal;\n//# sourceMappingURL=ExecuteContractProposal.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}