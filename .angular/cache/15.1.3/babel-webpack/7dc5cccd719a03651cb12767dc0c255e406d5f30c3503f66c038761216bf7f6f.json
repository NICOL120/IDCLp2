{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgCreateVestingAccount = void 0;\nvar Coins_1 = require(\"../../Coins\");\nvar json_1 = require(\"../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@terra-money/terra.proto/cosmos/vesting/v1beta1/tx\");\nvar long_1 = __importDefault(require(\"long\"));\n/**\n * MsgCreateVestingAccount defines a message that enables creating a vesting account.\n */\nvar MsgCreateVestingAccount = /** @class */function (_super) {\n  __extends(MsgCreateVestingAccount, _super);\n  /**\n   * @param from_address sender's address\n   * @param to_address recipient's address\n   * @param amount value of the transaction\n   */\n  function MsgCreateVestingAccount(from_address, to_address, amount, end_time, delayed) {\n    var _this = _super.call(this) || this;\n    _this.from_address = from_address;\n    _this.to_address = to_address;\n    _this.end_time = end_time;\n    _this.delayed = delayed;\n    _this.amount = new Coins_1.Coins(amount);\n    return _this;\n  }\n  MsgCreateVestingAccount.fromAmino = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      amount = _a.amount,\n      end_time = _a.end_time,\n      delayed = _a.delayed;\n    return new MsgCreateVestingAccount(from_address, to_address, Coins_1.Coins.fromAmino(amount), Number.parseInt(end_time), delayed);\n  };\n  MsgCreateVestingAccount.prototype.toAmino = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      amount = _a.amount,\n      end_time = _a.end_time,\n      delayed = _a.delayed;\n    return {\n      type: 'cosmos-sdk/MsgCreateVestingAccount',\n      value: {\n        from_address: from_address,\n        to_address: to_address,\n        amount: amount.toAmino(),\n        end_time: end_time.toFixed(),\n        delayed: delayed\n      }\n    };\n  };\n  MsgCreateVestingAccount.fromData = function (data, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var from_address = data.from_address,\n      to_address = data.to_address,\n      amount = data.amount,\n      end_time = data.end_time,\n      delayed = data.delayed;\n    return new MsgCreateVestingAccount(from_address, to_address, Coins_1.Coins.fromData(amount), Number.parseInt(end_time), delayed);\n  };\n  MsgCreateVestingAccount.prototype.toData = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      amount = _a.amount,\n      end_time = _a.end_time,\n      delayed = _a.delayed;\n    return {\n      '@type': '/cosmos.vesting.v1beta1.MsgCreateVestingAccount',\n      from_address: from_address,\n      to_address: to_address,\n      amount: amount.toData(),\n      end_time: end_time.toFixed(),\n      delayed: delayed\n    };\n  };\n  MsgCreateVestingAccount.fromProto = function (proto, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new MsgCreateVestingAccount(proto.fromAddress, proto.toAddress, Coins_1.Coins.fromProto(proto.amount), proto.endTime.toNumber(), proto.delayed);\n  };\n  MsgCreateVestingAccount.prototype.toProto = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      amount = _a.amount,\n      end_time = _a.end_time,\n      delayed = _a.delayed;\n    return tx_1.MsgCreateVestingAccount.fromPartial({\n      fromAddress: from_address,\n      toAddress: to_address,\n      amount: amount.toProto(),\n      endTime: long_1.default.fromNumber(end_time),\n      delayed: delayed\n    });\n  };\n  MsgCreateVestingAccount.prototype.packAny = function (isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.vesting.v1beta1.MsgCreateVestingAccount',\n      value: tx_1.MsgCreateVestingAccount.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  MsgCreateVestingAccount.unpackAny = function (msgAny, isClassic) {\n    if (isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return MsgCreateVestingAccount.fromProto(tx_1.MsgCreateVestingAccount.decode(msgAny.value), isClassic);\n  };\n  return MsgCreateVestingAccount;\n}(json_1.JSONSerializable);\nexports.MsgCreateVestingAccount = MsgCreateVestingAccount;\n//# sourceMappingURL=MsgCreateVestingAccount.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}