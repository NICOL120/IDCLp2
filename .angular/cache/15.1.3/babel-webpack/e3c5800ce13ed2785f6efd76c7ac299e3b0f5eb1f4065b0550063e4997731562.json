{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgUpgradeClient = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/client/v1/tx\");\n/**\n * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state\n */\nvar MsgUpgradeClient = /** @class */function (_super) {\n  __extends(MsgUpgradeClient, _super);\n  /**\n   * @param client_id client unique identifier\n   * @param client_state  upgraded client state\n   * @param consensus_state upgraded consensus state, only contains enough information to serve as a basis of trust in update logic\n   * @param proof_upgrade_client proof that old chain committed to new client\n   * @param proof_upgrade_consensus_state  proof that old chain committed to new consensus state\n   * @param signer signer address\n   */\n  function MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer) {\n    var _this = _super.call(this) || this;\n    _this.client_id = client_id;\n    _this.client_state = client_state;\n    _this.consensus_state = consensus_state;\n    _this.proof_upgrade_client = proof_upgrade_client;\n    _this.proof_upgrade_consensus_state = proof_upgrade_consensus_state;\n    _this.signer = signer;\n    return _this;\n  }\n  MsgUpgradeClient.fromAmino = function (_, isClassic) {\n    _;\n    isClassic;\n    throw new Error('Amino not supported');\n  };\n  MsgUpgradeClient.prototype.toAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n  MsgUpgradeClient.fromData = function (data, _) {\n    _;\n    var client_id = data.client_id,\n      client_state = data.client_state,\n      consensus_state = data.consensus_state,\n      proof_upgrade_client = data.proof_upgrade_client,\n      proof_upgrade_consensus_state = data.proof_upgrade_consensus_state,\n      signer = data.signer;\n    return new MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer);\n  };\n  MsgUpgradeClient.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      client_id = _a.client_id,\n      client_state = _a.client_state,\n      consensus_state = _a.consensus_state,\n      proof_upgrade_client = _a.proof_upgrade_client,\n      proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n      signer = _a.signer;\n    return {\n      '@type': '/ibc.core.client.v1.MsgUpgradeClient',\n      client_id: client_id,\n      client_state: client_state,\n      consensus_state: consensus_state,\n      proof_upgrade_client: proof_upgrade_client,\n      proof_upgrade_consensus_state: proof_upgrade_consensus_state,\n      signer: signer\n    };\n  };\n  MsgUpgradeClient.fromProto = function (proto, _) {\n    _;\n    return new MsgUpgradeClient(proto.clientId, proto.clientState, proto.consensusState, Buffer.from(proto.proofUpgradeClient).toString('base64'), Buffer.from(proto.proofUpgradeConsensusState).toString('base64'), proto.signer);\n  };\n  MsgUpgradeClient.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      client_id = _a.client_id,\n      client_state = _a.client_state,\n      consensus_state = _a.consensus_state,\n      proof_upgrade_client = _a.proof_upgrade_client,\n      proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n      signer = _a.signer;\n    return tx_1.MsgUpgradeClient.fromPartial({\n      clientId: client_id,\n      clientState: client_state,\n      consensusState: consensus_state,\n      proofUpgradeClient: Buffer.from(proof_upgrade_client, 'base64'),\n      proofUpgradeConsensusState: Buffer.from(proof_upgrade_consensus_state, 'base64'),\n      signer: signer\n    });\n  };\n  MsgUpgradeClient.prototype.packAny = function (_) {\n    _;\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.client.v1.MsgUpgradeClient',\n      value: tx_1.MsgUpgradeClient.encode(this.toProto()).finish()\n    });\n  };\n  MsgUpgradeClient.unpackAny = function (msgAny, _) {\n    _;\n    return MsgUpgradeClient.fromProto(tx_1.MsgUpgradeClient.decode(msgAny.value));\n  };\n  return MsgUpgradeClient;\n}(json_1.JSONSerializable);\nexports.MsgUpgradeClient = MsgUpgradeClient;\n//# sourceMappingURL=MsgUpgradeClient.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}