{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgExecuteContract = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar Coins_1 = require(\"../../Coins\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@terra-money/legacy.proto/terra/wasm/v1beta1/tx\");\nvar tx_2 = require(\"@terra-money/terra.proto/cosmwasm/wasm/v1/tx\");\nvar MsgExecuteContract = /** @class */function (_super) {\n  __extends(MsgExecuteContract, _super);\n  /**\n   * @param sender contract user\n   * @param contract contract address\n   * @param execute_msg HandleMsg to pass as arguments for contract invocation\n   * @param coins coins to be sent to contract\n   */\n  function MsgExecuteContract(sender, contract, execute_msg, coins) {\n    if (coins === void 0) {\n      coins = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.sender = sender;\n    _this.contract = contract;\n    _this.execute_msg = execute_msg;\n    _this.coins = new Coins_1.Coins(coins);\n    return _this;\n  }\n  MsgExecuteContract.fromAmino = function (data, isClassic) {\n    if (isClassic) {\n      var _a = data.value,\n        sender = _a.sender,\n        contract = _a.contract,\n        execute_msg = _a.execute_msg,\n        coins = _a.coins;\n      return new MsgExecuteContract(sender, contract, execute_msg, Coins_1.Coins.fromAmino(coins));\n    } else {\n      var _b = data.value,\n        sender = _b.sender,\n        contract = _b.contract,\n        msg = _b.msg,\n        funds = _b.funds;\n      return new MsgExecuteContract(sender, contract, msg, Coins_1.Coins.fromAmino(funds));\n    }\n  };\n  MsgExecuteContract.prototype.toAmino = function (isClassic) {\n    var _a = this,\n      sender = _a.sender,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      return {\n        type: 'wasm/MsgExecuteContract',\n        value: {\n          sender: sender,\n          contract: contract,\n          execute_msg: (0, json_1.removeNull)(execute_msg),\n          coins: coins.toAmino()\n        }\n      };\n    } else {\n      return {\n        type: 'wasm/MsgExecuteContract',\n        value: {\n          sender: sender,\n          contract: contract,\n          msg: (0, json_1.removeNull)(execute_msg),\n          funds: coins.toAmino()\n        }\n      };\n    }\n  };\n  MsgExecuteContract.fromProto = function (proto, isClassic) {\n    if (isClassic) {\n      var p = proto;\n      return new MsgExecuteContract(p.sender, p.contract, JSON.parse(Buffer.from(p.executeMsg).toString('utf-8')), Coins_1.Coins.fromProto(p.coins));\n    } else {\n      var p = proto;\n      return new MsgExecuteContract(p.sender, p.contract, JSON.parse(Buffer.from(p.msg).toString('utf-8')), Coins_1.Coins.fromProto(p.funds));\n    }\n  };\n  MsgExecuteContract.prototype.toProto = function (isClassic) {\n    var _a = this,\n      sender = _a.sender,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      return tx_1.MsgExecuteContract.fromPartial({\n        coins: coins.toProto(),\n        contract: contract,\n        sender: sender,\n        executeMsg: Buffer.from(JSON.stringify((0, json_1.removeNull)(execute_msg)), 'utf-8')\n      });\n    } else {\n      return tx_2.MsgExecuteContract.fromPartial({\n        funds: coins.toProto(),\n        contract: contract,\n        sender: sender,\n        msg: Buffer.from(JSON.stringify((0, json_1.removeNull)(execute_msg)), 'utf-8')\n      });\n    }\n  };\n  MsgExecuteContract.prototype.packAny = function (isClassic) {\n    if (isClassic) {\n      return any_1.Any.fromPartial({\n        typeUrl: '/terra.wasm.v1beta1.MsgExecuteContract',\n        value: tx_1.MsgExecuteContract.encode(this.toProto(isClassic)).finish()\n      });\n    } else {\n      return any_1.Any.fromPartial({\n        typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',\n        value: tx_2.MsgExecuteContract.encode(this.toProto(isClassic)).finish()\n      });\n    }\n  };\n  MsgExecuteContract.unpackAny = function (msgAny, isClassic) {\n    return MsgExecuteContract.fromProto(isClassic ? tx_1.MsgExecuteContract.decode(msgAny.value) : tx_2.MsgExecuteContract.decode(msgAny.value), isClassic);\n  };\n  MsgExecuteContract.fromData = function (data, isClassic) {\n    if (isClassic) {\n      var _a = data,\n        sender = _a.sender,\n        contract = _a.contract,\n        execute_msg = _a.execute_msg,\n        coins = _a.coins;\n      return new MsgExecuteContract(sender, contract, execute_msg, Coins_1.Coins.fromData(coins));\n    } else {\n      var _b = data,\n        sender = _b.sender,\n        contract = _b.contract,\n        msg = _b.msg,\n        funds = _b.funds;\n      return new MsgExecuteContract(sender, contract, msg, Coins_1.Coins.fromData(funds));\n    }\n  };\n  MsgExecuteContract.prototype.toData = function (isClassic) {\n    var _a = this,\n      sender = _a.sender,\n      contract = _a.contract,\n      execute_msg = _a.execute_msg,\n      coins = _a.coins;\n    if (isClassic) {\n      return {\n        '@type': '/terra.wasm.v1beta1.MsgExecuteContract',\n        sender: sender,\n        contract: contract,\n        execute_msg: execute_msg,\n        coins: coins.toData()\n      };\n    } else {\n      return {\n        '@type': '/cosmwasm.wasm.v1.MsgExecuteContract',\n        sender: sender,\n        contract: contract,\n        msg: execute_msg,\n        funds: coins.toData()\n      };\n    }\n  };\n  return MsgExecuteContract;\n}(json_1.JSONSerializable);\nexports.MsgExecuteContract = MsgExecuteContract;\n//# sourceMappingURL=MsgExecuteContract.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}