{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientUpdateProposal = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar client_1 = require(\"@terra-money/terra.proto/ibc/core/client/v1/client\");\n/**\n * Proposal that allows updating IBC clients. If it passes, the substitute\n * client's latest consensus state is copied over to the subject client.\n */\nvar ClientUpdateProposal = /** @class */function (_super) {\n  __extends(ClientUpdateProposal, _super);\n  /**\n   * @param title proposal's title\n   * @param description proposal's description\n   * @param subjectClientId client to update\n   * @param substituteClientId client to copy\n   */\n  function ClientUpdateProposal(title, description, subjectClientId, substituteClientId) {\n    var _this = _super.call(this) || this;\n    _this.title = title;\n    _this.description = description;\n    _this.subjectClientId = subjectClientId;\n    _this.substituteClientId = substituteClientId;\n    return _this;\n  }\n  ClientUpdateProposal.fromAmino = function (data, _) {\n    _;\n    var _a = data.value,\n      title = _a.title,\n      description = _a.description,\n      subjectClientId = _a.subjectClientId,\n      substituteClientId = _a.substituteClientId;\n    return new ClientUpdateProposal(title, description, subjectClientId, substituteClientId);\n  };\n  ClientUpdateProposal.prototype.toAmino = function (_) {\n    _;\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      subjectClientId = _a.subjectClientId,\n      substituteClientId = _a.substituteClientId;\n    return {\n      type: 'ibc/ClientUpdateProposal',\n      value: {\n        title: title,\n        description: description,\n        subjectClientId: subjectClientId,\n        substituteClientId: substituteClientId\n      }\n    };\n  };\n  ClientUpdateProposal.fromData = function (data, _) {\n    _;\n    var title = data.title,\n      description = data.description,\n      subject_client_id = data.subject_client_id,\n      substitute_client_id = data.substitute_client_id;\n    return new ClientUpdateProposal(title, description, subject_client_id, substitute_client_id);\n  };\n  ClientUpdateProposal.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      subjectClientId = _a.subjectClientId,\n      substituteClientId = _a.substituteClientId;\n    return {\n      '@type': '/ibc.core.client.v1.ClientUpdateProposal',\n      title: title,\n      description: description,\n      subject_client_id: subjectClientId,\n      substitute_client_id: substituteClientId\n    };\n  };\n  ClientUpdateProposal.fromProto = function (proto, _) {\n    _;\n    return new ClientUpdateProposal(proto.title, proto.description, proto.subjectClientId, proto.substituteClientId);\n  };\n  ClientUpdateProposal.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      title = _a.title,\n      description = _a.description,\n      subjectClientId = _a.subjectClientId,\n      substituteClientId = _a.substituteClientId;\n    return client_1.ClientUpdateProposal.fromPartial({\n      subjectClientId: subjectClientId,\n      substituteClientId: substituteClientId,\n      description: description,\n      title: title\n    });\n  };\n  ClientUpdateProposal.prototype.packAny = function (_) {\n    _;\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.client.v1.ClientUpdateProposal',\n      value: client_1.ClientUpdateProposal.encode(this.toProto()).finish()\n    });\n  };\n  ClientUpdateProposal.unpackAny = function (msgAny, _) {\n    _;\n    return ClientUpdateProposal.fromProto(client_1.ClientUpdateProposal.decode(msgAny.value));\n  };\n  return ClientUpdateProposal;\n}(json_1.JSONSerializable);\nexports.ClientUpdateProposal = ClientUpdateProposal;\n//# sourceMappingURL=ClientUpdateProposal.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}