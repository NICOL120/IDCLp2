{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"ibc.applications.interchain_accounts.host.v1\";\nconst baseParams = {\n  hostEnabled: false,\n  allowMessages: \"\"\n};\nexports.Params = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.hostEnabled === true) {\n      writer.uint32(8).bool(message.hostEnabled);\n    }\n    for (const v of message.allowMessages) {\n      writer.uint32(18).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseParams);\n    message.allowMessages = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hostEnabled = reader.bool();\n          break;\n        case 2:\n          message.allowMessages.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseParams);\n    message.allowMessages = [];\n    if (object.hostEnabled !== undefined && object.hostEnabled !== null) {\n      message.hostEnabled = Boolean(object.hostEnabled);\n    } else {\n      message.hostEnabled = false;\n    }\n    if (object.allowMessages !== undefined && object.allowMessages !== null) {\n      for (const e of object.allowMessages) {\n        message.allowMessages.push(String(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hostEnabled !== undefined && (obj.hostEnabled = message.hostEnabled);\n    if (message.allowMessages) {\n      obj.allowMessages = message.allowMessages.map(e => e);\n    } else {\n      obj.allowMessages = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseParams);\n    message.allowMessages = [];\n    if (object.hostEnabled !== undefined && object.hostEnabled !== null) {\n      message.hostEnabled = object.hostEnabled;\n    } else {\n      message.hostEnabled = false;\n    }\n    if (object.allowMessages !== undefined && object.allowMessages !== null) {\n      for (const e of object.allowMessages) {\n        message.allowMessages.push(e);\n      }\n    }\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\n//# sourceMappingURL=host.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}