{"ast":null,"code":"import { div, times } from '../libs/math';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/info.service\";\nimport * as i2 from \"../services/config.service\";\nexport let PricePipe = /*#__PURE__*/(() => {\n  class PricePipe {\n    constructor(info, config) {\n      this.info = info;\n      this.config = config;\n    }\n    transform(key) {\n      var _a, _b, _c, _d, _e, _f;\n      const poolResponse = this.info.poolResponses[key];\n      if (!poolResponse) {\n        return null;\n      }\n      const asset0Token = poolResponse.assets[0].info.token ? (_a = poolResponse.assets[0].info.token) === null || _a === void 0 ? void 0 : _a['contract_addr'] : (_b = poolResponse.assets[0].info.native_token) === null || _b === void 0 ? void 0 : _b['denom'];\n      const asset1Token = poolResponse.assets[1].info.token ? (_c = poolResponse.assets[1].info.token) === null || _c === void 0 ? void 0 : _c['contract_addr'] : (_d = poolResponse.assets[1].info.native_token) === null || _d === void 0 ? void 0 : _d['denom'];\n      const asset0Decimals = this.config.NATIVE_TOKEN_DENOMS.has(asset0Token) ? 6 : ((_e = this.info.tokenInfos[asset0Token]) === null || _e === void 0 ? void 0 : _e.decimals) || 6;\n      const asset1Decimals = this.config.NATIVE_TOKEN_DENOMS.has(asset1Token) ? 6 : ((_f = this.info.tokenInfos[asset1Token]) === null || _f === void 0 ? void 0 : _f.decimals) || 6;\n      const baseToken = key.split('|')[1];\n      if (asset0Token === baseToken) {\n        return this.toUIPrice(div(poolResponse.assets[1].amount, poolResponse.assets[0].amount), asset1Decimals, asset0Decimals);\n      } else {\n        return this.toUIPrice(div(poolResponse.assets[0].amount, poolResponse.assets[1].amount), asset0Decimals, asset1Decimals);\n      }\n    }\n    toUIPrice(price, offer_decimals, ask_decimals) {\n      return offer_decimals === ask_decimals ? price : times(price, Math.pow(10, ask_decimals - offer_decimals));\n    }\n  }\n  PricePipe.ɵfac = function PricePipe_Factory(t) {\n    return new (t || PricePipe)(i0.ɵɵdirectiveInject(i1.InfoService, 16), i0.ɵɵdirectiveInject(i2.ConfigService, 16));\n  };\n  PricePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"price\",\n    type: PricePipe,\n    pure: true\n  });\n  return PricePipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}