{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VestingSchedule = exports.Schedule = exports.LazyGradedVestingAccount = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst vesting_1 = require(\"../../../cosmos/vesting/v1beta1/vesting\");\nexports.protobufPackage = \"terra.vesting.v1beta1\";\nconst baseLazyGradedVestingAccount = {};\nexports.LazyGradedVestingAccount = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.baseVestingAccount !== undefined) {\n      vesting_1.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.vestingSchedules) {\n      exports.VestingSchedule.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseLazyGradedVestingAccount);\n    message.vestingSchedules = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = vesting_1.BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.vestingSchedules.push(exports.VestingSchedule.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseLazyGradedVestingAccount);\n    message.vestingSchedules = [];\n    if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n      message.baseVestingAccount = vesting_1.BaseVestingAccount.fromJSON(object.baseVestingAccount);\n    } else {\n      message.baseVestingAccount = undefined;\n    }\n    if (object.vestingSchedules !== undefined && object.vestingSchedules !== null) {\n      for (const e of object.vestingSchedules) {\n        message.vestingSchedules.push(exports.VestingSchedule.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.baseVestingAccount !== undefined && (obj.baseVestingAccount = message.baseVestingAccount ? vesting_1.BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n    if (message.vestingSchedules) {\n      obj.vestingSchedules = message.vestingSchedules.map(e => e ? exports.VestingSchedule.toJSON(e) : undefined);\n    } else {\n      obj.vestingSchedules = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseLazyGradedVestingAccount);\n    message.vestingSchedules = [];\n    if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n      message.baseVestingAccount = vesting_1.BaseVestingAccount.fromPartial(object.baseVestingAccount);\n    } else {\n      message.baseVestingAccount = undefined;\n    }\n    if (object.vestingSchedules !== undefined && object.vestingSchedules !== null) {\n      for (const e of object.vestingSchedules) {\n        message.vestingSchedules.push(exports.VestingSchedule.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nconst baseSchedule = {\n  startTime: long_1.default.ZERO,\n  endTime: long_1.default.ZERO,\n  ratio: \"\"\n};\nexports.Schedule = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (!message.startTime.isZero()) {\n      writer.uint32(8).int64(message.startTime);\n    }\n    if (!message.endTime.isZero()) {\n      writer.uint32(16).int64(message.endTime);\n    }\n    if (message.ratio !== \"\") {\n      writer.uint32(26).string(message.ratio);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSchedule);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.startTime = reader.int64();\n          break;\n        case 2:\n          message.endTime = reader.int64();\n          break;\n        case 3:\n          message.ratio = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSchedule);\n    if (object.startTime !== undefined && object.startTime !== null) {\n      message.startTime = long_1.default.fromString(object.startTime);\n    } else {\n      message.startTime = long_1.default.ZERO;\n    }\n    if (object.endTime !== undefined && object.endTime !== null) {\n      message.endTime = long_1.default.fromString(object.endTime);\n    } else {\n      message.endTime = long_1.default.ZERO;\n    }\n    if (object.ratio !== undefined && object.ratio !== null) {\n      message.ratio = String(object.ratio);\n    } else {\n      message.ratio = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.startTime !== undefined && (obj.startTime = (message.startTime || long_1.default.ZERO).toString());\n    message.endTime !== undefined && (obj.endTime = (message.endTime || long_1.default.ZERO).toString());\n    message.ratio !== undefined && (obj.ratio = message.ratio);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSchedule);\n    if (object.startTime !== undefined && object.startTime !== null) {\n      message.startTime = object.startTime;\n    } else {\n      message.startTime = long_1.default.ZERO;\n    }\n    if (object.endTime !== undefined && object.endTime !== null) {\n      message.endTime = object.endTime;\n    } else {\n      message.endTime = long_1.default.ZERO;\n    }\n    if (object.ratio !== undefined && object.ratio !== null) {\n      message.ratio = object.ratio;\n    } else {\n      message.ratio = \"\";\n    }\n    return message;\n  }\n};\nconst baseVestingSchedule = {\n  denom: \"\"\n};\nexports.VestingSchedule = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    for (const v of message.schedules) {\n      exports.Schedule.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseVestingSchedule);\n    message.schedules = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.schedules.push(exports.Schedule.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseVestingSchedule);\n    message.schedules = [];\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n    if (object.schedules !== undefined && object.schedules !== null) {\n      for (const e of object.schedules) {\n        message.schedules.push(exports.Schedule.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    if (message.schedules) {\n      obj.schedules = message.schedules.map(e => e ? exports.Schedule.toJSON(e) : undefined);\n    } else {\n      obj.schedules = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseVestingSchedule);\n    message.schedules = [];\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = object.denom;\n    } else {\n      message.denom = \"\";\n    }\n    if (object.schedules !== undefined && object.schedules !== null) {\n      for (const e of object.schedules) {\n        message.schedules.push(exports.Schedule.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\n//# sourceMappingURL=vesting.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}