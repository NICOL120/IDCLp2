{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nconst baseBasicAllowance = {};\nexports.BasicAllowance = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.spendLimit) {\n      coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.expiration !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBasicAllowance);\n    message.spendLimit = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.expiration = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseBasicAllowance);\n    message.spendLimit = [];\n    if (object.spendLimit !== undefined && object.spendLimit !== null) {\n      for (const e of object.spendLimit) {\n        message.spendLimit.push(coin_1.Coin.fromJSON(e));\n      }\n    }\n    if (object.expiration !== undefined && object.expiration !== null) {\n      message.expiration = fromJsonTimestamp(object.expiration);\n    } else {\n      message.expiration = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.spendLimit) {\n      obj.spendLimit = message.spendLimit.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.spendLimit = [];\n    }\n    message.expiration !== undefined && (obj.expiration = message.expiration.toISOString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseBasicAllowance);\n    message.spendLimit = [];\n    if (object.spendLimit !== undefined && object.spendLimit !== null) {\n      for (const e of object.spendLimit) {\n        message.spendLimit.push(coin_1.Coin.fromPartial(e));\n      }\n    }\n    if (object.expiration !== undefined && object.expiration !== null) {\n      message.expiration = object.expiration;\n    } else {\n      message.expiration = undefined;\n    }\n    return message;\n  }\n};\nconst basePeriodicAllowance = {};\nexports.PeriodicAllowance = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.basic !== undefined) {\n      exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.period !== undefined) {\n      duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.periodSpendLimit) {\n      coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.periodCanSpend) {\n      coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.periodReset !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePeriodicAllowance);\n    message.periodSpendLimit = [];\n    message.periodCanSpend = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.basic = exports.BasicAllowance.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.period = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.periodReset = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePeriodicAllowance);\n    message.periodSpendLimit = [];\n    message.periodCanSpend = [];\n    if (object.basic !== undefined && object.basic !== null) {\n      message.basic = exports.BasicAllowance.fromJSON(object.basic);\n    } else {\n      message.basic = undefined;\n    }\n    if (object.period !== undefined && object.period !== null) {\n      message.period = duration_1.Duration.fromJSON(object.period);\n    } else {\n      message.period = undefined;\n    }\n    if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n      for (const e of object.periodSpendLimit) {\n        message.periodSpendLimit.push(coin_1.Coin.fromJSON(e));\n      }\n    }\n    if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n      for (const e of object.periodCanSpend) {\n        message.periodCanSpend.push(coin_1.Coin.fromJSON(e));\n      }\n    }\n    if (object.periodReset !== undefined && object.periodReset !== null) {\n      message.periodReset = fromJsonTimestamp(object.periodReset);\n    } else {\n      message.periodReset = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.basic !== undefined && (obj.basic = message.basic ? exports.BasicAllowance.toJSON(message.basic) : undefined);\n    message.period !== undefined && (obj.period = message.period ? duration_1.Duration.toJSON(message.period) : undefined);\n    if (message.periodSpendLimit) {\n      obj.periodSpendLimit = message.periodSpendLimit.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.periodSpendLimit = [];\n    }\n    if (message.periodCanSpend) {\n      obj.periodCanSpend = message.periodCanSpend.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.periodCanSpend = [];\n    }\n    message.periodReset !== undefined && (obj.periodReset = message.periodReset.toISOString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, basePeriodicAllowance);\n    message.periodSpendLimit = [];\n    message.periodCanSpend = [];\n    if (object.basic !== undefined && object.basic !== null) {\n      message.basic = exports.BasicAllowance.fromPartial(object.basic);\n    } else {\n      message.basic = undefined;\n    }\n    if (object.period !== undefined && object.period !== null) {\n      message.period = duration_1.Duration.fromPartial(object.period);\n    } else {\n      message.period = undefined;\n    }\n    if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n      for (const e of object.periodSpendLimit) {\n        message.periodSpendLimit.push(coin_1.Coin.fromPartial(e));\n      }\n    }\n    if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n      for (const e of object.periodCanSpend) {\n        message.periodCanSpend.push(coin_1.Coin.fromPartial(e));\n      }\n    }\n    if (object.periodReset !== undefined && object.periodReset !== null) {\n      message.periodReset = object.periodReset;\n    } else {\n      message.periodReset = undefined;\n    }\n    return message;\n  }\n};\nconst baseAllowedMsgAllowance = {\n  allowedMessages: \"\"\n};\nexports.AllowedMsgAllowance = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.allowance !== undefined) {\n      any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.allowedMessages) {\n      writer.uint32(18).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseAllowedMsgAllowance);\n    message.allowedMessages = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.allowance = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.allowedMessages.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseAllowedMsgAllowance);\n    message.allowedMessages = [];\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromJSON(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n      for (const e of object.allowedMessages) {\n        message.allowedMessages.push(String(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.allowance !== undefined && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n    if (message.allowedMessages) {\n      obj.allowedMessages = message.allowedMessages.map(e => e);\n    } else {\n      obj.allowedMessages = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseAllowedMsgAllowance);\n    message.allowedMessages = [];\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromPartial(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n      for (const e of object.allowedMessages) {\n        message.allowedMessages.push(e);\n      }\n    }\n    return message;\n  }\n};\nconst baseGrant = {\n  granter: \"\",\n  grantee: \"\"\n};\nexports.Grant = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n    if (message.allowance !== undefined) {\n      any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseGrant);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n        case 2:\n          message.grantee = reader.string();\n          break;\n        case 3:\n          message.allowance = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseGrant);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromJSON(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    message.allowance !== undefined && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseGrant);\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n    if (object.allowance !== undefined && object.allowance !== null) {\n      message.allowance = any_1.Any.fromPartial(object.allowance);\n    } else {\n      message.allowance = undefined;\n    }\n    return message;\n  }\n};\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\n//# sourceMappingURL=feegrant.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}