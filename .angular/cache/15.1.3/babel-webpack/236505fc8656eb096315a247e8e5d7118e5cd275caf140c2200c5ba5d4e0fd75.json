{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgAggregateExchangeRatePrevote = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar any_1 = require(\"@terra-money/legacy.proto/google/protobuf/any\");\nvar tx_1 = require(\"@terra-money/legacy.proto/terra/oracle/v1beta1/tx\");\n/**\n * Aggregate analog of MsgExchangeRatePrevote\n */\nvar MsgAggregateExchangeRatePrevote = /** @class */function (_super) {\n  __extends(MsgAggregateExchangeRatePrevote, _super);\n  /**\n   * @param hash vote hash\n   * @param feeder validator's feeder account address\n   * @param validator validator's operator address\n   */\n  function MsgAggregateExchangeRatePrevote(hash, feeder, validator) {\n    var _this = _super.call(this) || this;\n    _this.hash = hash;\n    _this.feeder = feeder;\n    _this.validator = validator;\n    return _this;\n  }\n  MsgAggregateExchangeRatePrevote.fromAmino = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      hash = _a.hash,\n      feeder = _a.feeder,\n      validator = _a.validator;\n    return new MsgAggregateExchangeRatePrevote(hash, feeder, validator);\n  };\n  MsgAggregateExchangeRatePrevote.prototype.toAmino = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      hash = _a.hash,\n      feeder = _a.feeder,\n      validator = _a.validator;\n    return {\n      type: 'oracle/MsgAggregateExchangeRatePrevote',\n      value: {\n        hash: hash,\n        feeder: feeder,\n        validator: validator\n      }\n    };\n  };\n  MsgAggregateExchangeRatePrevote.fromData = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var hash = data.hash,\n      feeder = data.feeder,\n      validator = data.validator;\n    return new MsgAggregateExchangeRatePrevote(hash, feeder, validator);\n  };\n  MsgAggregateExchangeRatePrevote.prototype.toData = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      hash = _a.hash,\n      feeder = _a.feeder,\n      validator = _a.validator;\n    return {\n      '@type': '/terra.oracle.v1beta1.MsgAggregateExchangeRatePrevote',\n      hash: hash,\n      feeder: feeder,\n      validator: validator\n    };\n  };\n  MsgAggregateExchangeRatePrevote.fromProto = function (proto, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new MsgAggregateExchangeRatePrevote(proto.hash, proto.feeder, proto.validator);\n  };\n  MsgAggregateExchangeRatePrevote.prototype.toProto = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      hash = _a.hash,\n      feeder = _a.feeder,\n      validator = _a.validator;\n    return tx_1.MsgAggregateExchangeRatePrevote.fromPartial({\n      hash: hash,\n      feeder: feeder,\n      validator: validator\n    });\n  };\n  MsgAggregateExchangeRatePrevote.prototype.packAny = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/terra.oracle.v1beta1.MsgAggregateExchangeRatePrevote',\n      value: tx_1.MsgAggregateExchangeRatePrevote.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  MsgAggregateExchangeRatePrevote.unpackAny = function (msgAny, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return MsgAggregateExchangeRatePrevote.fromProto(tx_1.MsgAggregateExchangeRatePrevote.decode(msgAny.value), isClassic);\n  };\n  return MsgAggregateExchangeRatePrevote;\n}(json_1.JSONSerializable);\nexports.MsgAggregateExchangeRatePrevote = MsgAggregateExchangeRatePrevote;\n//# sourceMappingURL=MsgAggregateExchangeRatePrevote.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}