{"ast":null,"code":"import MobileDetect from 'mobile-detect';\nimport { getExtensions } from '@terra-money/wallet-controller/operators/getExtensions';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"mdb-angular-ui-kit/modal\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"mdb-angular-ui-kit/tooltip\";\nimport * as i5 from \"mdb-angular-ui-kit/dropdown\";\nconst _c0 = [\"formViewOnly\"];\nfunction ConnectOptionsComponent_ng_container_5_ng_container_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ConnectOptionsComponent_ng_container_5_ng_container_1_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const type_r8 = i0.ɵɵnextContext().$implicit;\n      const walletExtension_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.connect(type_r8, walletExtension_r6.identifier));\n    });\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const walletExtension_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", walletExtension_r6.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", walletExtension_r6.name, \" \");\n  }\n}\nfunction ConnectOptionsComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ConnectOptionsComponent_ng_container_5_ng_container_1_button_1_Template, 3, 2, \"button\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", type_r8 != \"WALLETCONNECT\");\n  }\n}\nfunction ConnectOptionsComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ConnectOptionsComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.types);\n  }\n}\nfunction ConnectOptionsComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ConnectOptionsComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.connect(\"WALLETCONNECT\", null));\n    });\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵtext(2, \" Wallet Connect \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConnectOptionsComponent_ng_container_7_a_1_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 22);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"mdbTooltip\", \"If installed, please turn on Prioritise XDEFI to allow connection\");\n  }\n}\nfunction ConnectOptionsComponent_ng_container_7_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 20);\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, ConnectOptionsComponent_ng_container_7_a_1_i_3_Template, 1, 1, \"i\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const walletExtensionInstall_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"href\", walletExtensionInstall_r17.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", walletExtensionInstall_r17.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Install \", walletExtensionInstall_r17.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", walletExtensionInstall_r17.identifier === \"xdefi-wallet\");\n  }\n}\nfunction ConnectOptionsComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ConnectOptionsComponent_ng_container_7_a_1_Template, 4, 4, \"a\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const walletExtensionInstall_r17 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.findWalletExtensionIdentifier(walletExtensionInstall_r17.identifier) && !ctx_r2.isPhoneOrTablet);\n  }\n}\nfunction ConnectOptionsComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Invalid Terra address \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ConnectOptionsComponent = /*#__PURE__*/(() => {\n  class ConnectOptionsComponent {\n    constructor(modalRef) {\n      var _a;\n      this.modalRef = modalRef;\n      this.walletExtensionsForInstall = [];\n      firstValueFrom(getExtensions()).then(value => {\n        this.walletExtensionsForInstall = value;\n      });\n      this.walletExtensions = (_a = window.terraWallets) !== null && _a !== void 0 ? _a : [];\n      const md = new MobileDetect(window.navigator.userAgent);\n      this.isPhoneOrTablet = md.phone() !== null || md.tablet() !== null;\n    }\n    connect(type, identifier) {\n      this.modalRef.close({\n        type,\n        identifier\n      });\n    }\n    connectViewOnly(networkName) {\n      if (this.formViewOnly.invalid) {\n        return;\n      }\n      const stateReadOnly = {\n        network: {\n          name: networkName\n        },\n        wallets: [{\n          terraAddress: this.viewOnlyAddress\n        }]\n      };\n      this.modalRef.close({\n        type: 'READONLY_CUSTOM_IMP',\n        stateReadOnly\n      });\n    }\n    findWalletExtensionIdentifier(identifier) {\n      return !!this.walletExtensions.find(w => w.identifier === identifier);\n    }\n  }\n  ConnectOptionsComponent.ɵfac = function ConnectOptionsComponent_Factory(t) {\n    return new (t || ConnectOptionsComponent)(i0.ɵɵdirectiveInject(i1.MdbModalRef));\n  };\n  ConnectOptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConnectOptionsComponent,\n    selectors: [[\"app-connect-options\"]],\n    viewQuery: function ConnectOptionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formViewOnly = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 8,\n    consts: [[1, \"modal-header\", \"text-center\"], [1, \"modal-title\", \"w-100\"], [1, \"modal-body\"], [1, \"d-grid\", \"gap-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"class\", \"btn btn-connect\", 3, \"click\", 4, \"ngIf\"], [\"novalidate\", \"\"], [\"formViewOnly\", \"ngForm\"], [1, \"input-group\"], [\"name\", \"viewOnlyAddress\", \"placeholder\", \"Input Terra Address\", \"pattern\", \"(^terra1[a-z0-9]{38}$)|(^terra1[a-z0-9]{58}$)\", 1, \"form-control\", \"fix-border\", 3, \"ngModel\", \"ngModelChange\"], [\"viewOnlyAddressCtl\", \"ngModel\"], [\"mdbDropdown\", \"\", 1, \"dropdown\", \"btn-group\"], [\"aria-expanded\", \"false\", \"mdbDropdownToggle\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-max\", \"last\", 3, \"disabled\"], [\"mdbDropdownMenu\", \"\", 1, \"dropdown-menu\"], [\"type\", \"submit\", 1, \"dropdown-item\", 3, \"click\"], [\"class\", \"invalid-feedback-custom\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-connect\", 3, \"click\"], [3, \"src\"], [\"src\", \"/assets/WalletConnect.png\"], [\"type\", \"button\", \"class\", \"btn btn-connect\", \"target\", \"_blank\", 3, \"href\", 4, \"ngIf\"], [\"type\", \"button\", \"target\", \"_blank\", 1, \"btn\", \"btn-connect\", 3, \"href\"], [\"class\", \"fas fa-info-circle info-icon super\", 3, \"mdbTooltip\", 4, \"ngIf\"], [1, \"fas\", \"fa-info-circle\", \"info-icon\", \"super\", 3, \"mdbTooltip\"], [1, \"invalid-feedback-custom\"]],\n    template: function ConnectOptionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Connect to a wallet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵtemplate(5, ConnectOptionsComponent_ng_container_5_Template, 2, 1, \"ng-container\", 4);\n        i0.ɵɵtemplate(6, ConnectOptionsComponent_button_6_Template, 3, 0, \"button\", 5);\n        i0.ɵɵtemplate(7, ConnectOptionsComponent_ng_container_7_Template, 2, 1, \"ng-container\", 4);\n        i0.ɵɵelementStart(8, \"form\", 6, 7)(10, \"div\", 8)(11, \"input\", 9, 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ConnectOptionsComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.viewOnlyAddress = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"button\", 12);\n        i0.ɵɵtext(15, \" View \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ul\", 13)(17, \"li\")(18, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function ConnectOptionsComponent_Template_a_click_18_listener() {\n          return ctx.connectViewOnly(\"mainnet\");\n        });\n        i0.ɵɵtext(19, \"Mainnet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"li\")(21, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function ConnectOptionsComponent_Template_a_click_21_listener() {\n          return ctx.connectViewOnly(\"testnet\");\n        });\n        i0.ɵɵtext(22, \"Testnet\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(23, ConnectOptionsComponent_span_23_Template, 2, 0, \"span\", 15);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(9);\n        const _r4 = i0.ɵɵreference(12);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.walletExtensions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.types.includes(\"WALLETCONNECT\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.walletExtensionsForInstall);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", (_r3.submitted || _r4.touched) && _r4.invalid);\n        i0.ɵɵproperty(\"ngModel\", ctx.viewOnlyAddress);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", _r4.invalid);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.pattern);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.MdbTooltipDirective, i5.MdbDropdownDirective, i5.MdbDropdownToggleDirective, i5.MdbDropdownMenuDirective],\n    styles: [\".btn[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:40px}[_ngcontent-%COMP%]::placeholder{color:#fff9;font-size:12px;font-weight:400}\"]\n  });\n  return ConnectOptionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}