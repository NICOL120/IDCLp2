{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Authorization = exports.AuthorizationGrant = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar GenericAuthorization_1 = require(\"./GenericAuthorization\");\nvar SendAuthorization_1 = require(\"./SendAuthorization\");\nvar StakeAuthorization_1 = require(\"./StakeAuthorization\");\nvar authz_1 = require(\"@terra-money/terra.proto/cosmos/authz/v1beta1/authz\");\nvar AuthorizationGrant = /** @class */function (_super) {\n  __extends(AuthorizationGrant, _super);\n  function AuthorizationGrant(authorization, expiration) {\n    var _this = _super.call(this) || this;\n    _this.authorization = authorization;\n    _this.expiration = expiration;\n    return _this;\n  }\n  AuthorizationGrant.fromAmino = function (amino, isClassic) {\n    var authorization = amino.authorization,\n      expiration = amino.expiration;\n    return new AuthorizationGrant(Authorization.fromAmino(authorization, isClassic), new Date(expiration));\n  };\n  AuthorizationGrant.prototype.toAmino = function (isClassic) {\n    var _a = this,\n      authorization = _a.authorization,\n      expiration = _a.expiration;\n    return {\n      authorization: authorization.toAmino(isClassic),\n      expiration: expiration.toISOString().replace(/\\.000Z$/, 'Z')\n    };\n  };\n  AuthorizationGrant.fromData = function (data, isClassic) {\n    var authorization = data.authorization,\n      expiration = data.expiration;\n    return new AuthorizationGrant(Authorization.fromData(authorization, isClassic), new Date(expiration));\n  };\n  AuthorizationGrant.prototype.toData = function (isClassic) {\n    var _a = this,\n      authorization = _a.authorization,\n      expiration = _a.expiration;\n    return {\n      authorization: authorization.toData(isClassic),\n      expiration: expiration.toISOString().replace(/\\.000Z$/, 'Z')\n    };\n  };\n  AuthorizationGrant.fromProto = function (proto, isClassic) {\n    return new AuthorizationGrant(Authorization.fromProto(proto.authorization, isClassic), proto.expiration);\n  };\n  AuthorizationGrant.prototype.toProto = function (isClassic) {\n    var _a = this,\n      authorization = _a.authorization,\n      expiration = _a.expiration;\n    return authz_1.Grant.fromPartial({\n      authorization: authorization.packAny(isClassic),\n      expiration: expiration\n    });\n  };\n  return AuthorizationGrant;\n}(json_1.JSONSerializable);\nexports.AuthorizationGrant = AuthorizationGrant;\nvar Authorization;\n(function (Authorization) {\n  function fromAmino(data, isClassic) {\n    switch (data.type) {\n      case 'msgauth/SendAuthorization':\n      case 'cosmos-sdk/SendAuthorization':\n        return SendAuthorization_1.SendAuthorization.fromAmino(data, isClassic);\n      case 'msgauth/GenericAuthorization':\n      case 'cosmos-sdk/GenericAuthorization':\n        return GenericAuthorization_1.GenericAuthorization.fromAmino(data, isClassic);\n    }\n  }\n  Authorization.fromAmino = fromAmino;\n  function fromData(data, isClassic) {\n    switch (data['@type']) {\n      case '/cosmos.authz.v1beta1.GenericAuthorization':\n        return GenericAuthorization_1.GenericAuthorization.fromData(data, isClassic);\n      case '/cosmos.bank.v1beta1.SendAuthorization':\n        return SendAuthorization_1.SendAuthorization.fromData(data, isClassic);\n      case '/cosmos.staking.v1beta1.StakeAuthorization':\n        return StakeAuthorization_1.StakeAuthorization.fromData(data, isClassic);\n    }\n  }\n  Authorization.fromData = fromData;\n  function fromProto(proto, isClassic) {\n    var typeUrl = proto.typeUrl;\n    switch (typeUrl) {\n      case '/cosmos.authz.v1beta1.GenericAuthorization':\n        return GenericAuthorization_1.GenericAuthorization.unpackAny(proto, isClassic);\n      case '/cosmos.bank.v1beta1.SendAuthorization':\n        return SendAuthorization_1.SendAuthorization.unpackAny(proto, isClassic);\n      case '/cosmos.staking.v1beta1.StakeAuthorization':\n        return StakeAuthorization_1.StakeAuthorization.unpackAny(proto, isClassic);\n    }\n    throw new Error(\"Authorization type \".concat(typeUrl, \" not recognized\"));\n  }\n  Authorization.fromProto = fromProto;\n})(Authorization = exports.Authorization || (exports.Authorization = {}));\n//# sourceMappingURL=Authorization.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}