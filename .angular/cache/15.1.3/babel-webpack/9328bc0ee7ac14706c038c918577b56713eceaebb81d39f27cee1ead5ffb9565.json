{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Delegation = void 0;\nvar json_1 = require(\"../../util/json\");\nvar numeric_1 = require(\"../numeric\");\nvar Coin_1 = require(\"../Coin\");\nvar staking_1 = require(\"@terra-money/terra.proto/cosmos/staking/v1beta1/staking\");\n/**\n * Stores information about the status of a delegation between a delegator and validator, fetched from the blockchain.\n */\nvar Delegation = /** @class */function (_super) {\n  __extends(Delegation, _super);\n  /**\n   * @param delegator_address \tdelegator's account address\n   * @param validator_address \tvalidator's operator address\n   * @param shares \tdelegator's shares\n   * @param balance balance of the delegation\n   */\n  function Delegation(delegator_address, validator_address, shares, balance) {\n    var _this = _super.call(this) || this;\n    _this.delegator_address = delegator_address;\n    _this.validator_address = validator_address;\n    _this.shares = shares;\n    _this.balance = balance;\n    return _this;\n  }\n  Delegation.fromAmino = function (data) {\n    var _a = data.delegation,\n      delegator_address = _a.delegator_address,\n      validator_address = _a.validator_address,\n      shares = _a.shares,\n      balance = data.balance;\n    return new Delegation(delegator_address, validator_address, new numeric_1.Dec(shares), Coin_1.Coin.fromAmino(balance));\n  };\n  Delegation.prototype.toAmino = function () {\n    var _a = this,\n      delegator_address = _a.delegator_address,\n      validator_address = _a.validator_address,\n      shares = _a.shares,\n      balance = _a.balance;\n    return {\n      delegation: {\n        delegator_address: delegator_address,\n        validator_address: validator_address,\n        shares: shares.toString()\n      },\n      balance: balance.toAmino()\n    };\n  };\n  Delegation.fromData = function (data) {\n    var _a = data.delegation,\n      delegator_address = _a.delegator_address,\n      validator_address = _a.validator_address,\n      shares = _a.shares,\n      balance = data.balance;\n    return new Delegation(delegator_address, validator_address, new numeric_1.Dec(shares), Coin_1.Coin.fromData(balance));\n  };\n  Delegation.prototype.toData = function () {\n    var _a = this,\n      delegator_address = _a.delegator_address,\n      validator_address = _a.validator_address,\n      shares = _a.shares,\n      balance = _a.balance;\n    return {\n      delegation: {\n        delegator_address: delegator_address,\n        validator_address: validator_address,\n        shares: shares.toString()\n      },\n      balance: balance.toData()\n    };\n  };\n  Delegation.fromProto = function (proto) {\n    var delegationProto = proto.delegation;\n    return new Delegation(delegationProto.delegatorAddress, delegationProto.validatorAddress, new numeric_1.Dec(delegationProto.shares), Coin_1.Coin.fromProto(proto.balance));\n  };\n  Delegation.prototype.toProto = function () {\n    var _a = this,\n      delegator_address = _a.delegator_address,\n      validator_address = _a.validator_address,\n      shares = _a.shares,\n      balance = _a.balance;\n    return staking_1.DelegationResponse.fromPartial({\n      delegation: staking_1.Delegation.fromPartial({\n        delegatorAddress: delegator_address,\n        shares: shares.toString(),\n        validatorAddress: validator_address\n      }),\n      balance: balance.toProto()\n    });\n  };\n  return Delegation;\n}(json_1.JSONSerializable);\nexports.Delegation = Delegation;\n//# sourceMappingURL=Delegation.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}